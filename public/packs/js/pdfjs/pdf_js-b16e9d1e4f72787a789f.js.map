{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/pdfjs-dist/build/pdf.js","webpack:///./app/javascript/packs/pdfjs/pdf_js.js","webpack:///./node_modules/pdfjs-dist/web/pdf_viewer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","window","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","factory","__w_pdfjs_require__","_display_utils","addLinkAttributes","getFilenameFromUrl","LinkTarget","loadScript","PDFDateString","RenderingCancelledException","_api","build","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","_util","CMapCompressionType","createObjectURL","createPromiseCapability","createValidAbsoluteUrl","InvalidPDFException","MissingPDFException","OPS","PasswordResponses","PermissionFlag","removeNullCharacters","shadow","UnexpectedResponseException","UNSUPPORTED_FEATURES","Util","VerbosityLevel","_annotation_layer","AnnotationLayer","_api_compatibility","apiCompatibilityParams","_worker_options","GlobalWorkerOptions","_text_layer","renderTextLayer","_svg","SVGGraphics","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","link","rel","enabled","assert","urlNullRemoved","href","onclick","targetStr","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","anchor","query","substring","Promise","resolve","reject","script","document","createElement","onload","onerror","head","documentElement","appendChild","deprecated","details","console","StatTimer","DOMSVGFactory","DOMCMapReaderFactory","DOMCanvasFactory","PageViewport","SVG_NS","[object Object]","width","height","canvas","context","getContext","canvasAndContext","baseUrl","isCompressed","compressionType","BINARY","baseURI","fetch","then","async","response","ok","statusText","cMapData","arrayBuffer","stringToBytes","text","catch","reason","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","responseText","send","svg","createElementNS","setAttribute","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","applyTransform","rect","topLeft","bottomRight","applyInverseTransform","BaseException","msg","super","Response","ReadableStream","protocol","URL","ex","pdfDateStringRegex","started","times","warn","Date","now","outBuf","longest","time","duration","padEnd","input","isString","RegExp","matches","exec","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","UTC","arrayByteLength","arraysToBytes","resultLength","item","itemLength","bytesToString","strBuf","chunkEnd","chunk","capability","isSettled","promise","getVerbosityLevel","verbosity","info","INFOS","isArrayBuffer","v","isArrayEqual","arr1","arr2","every","element","index","isBool","isEmptyObj","isNum","isSameOrigin","otherUrl","base","origin","other","absoluteUrl","_isValidProtocol","NullCharactersRegExp","setVerbosityLevel","level","isInteger","string32","stringToPDFString","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","unreachable","IsEvalSupportedCached","IsLittleEndianCached","FormatError","UnknownErrorException","TextRenderingMode","StreamType","PasswordException","AbortException","ImageKind","FontType","AnnotationType","AnnotationStateModelType","AnnotationReviewState","AnnotationReplyType","AnnotationMarkedState","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","NEED_PASSWORD","INCORRECT_PASSWORD","cond","prop","writable","message","constructor","buffer8","Uint32Array","isLittleEndian","isEvalSupported","rgbBuf","m1","m2","p1","p2","p3","p4","transpose","first","sqrt","sx","sy","rect1","rect2","orderedX","sort","orderedY","result","normalizeRect","digits","contentType","forceDataSchema","blob","Blob","ii","b1","b2","b3","nw","electron","PDFPageProxy","PDFDocumentProxy","_font_loader","_canvas","_is_node","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","pdfBytes","location","rangeChunkSize","CMapReaderFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","workerParams","port","workerPort","fromPort","_worker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","listener","begin","loaded","total","pdfInfo","_pdfInfo","numPages","fingerprint","pageNumber","getPage","ref","getPageIndex","getDestinations","id","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","downloadInfoCapability","getStats","startCleanup","loadingTask","loadingParams","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","intent","annotationsPromise","annotationsIntent","getAnnotations","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","renderingIntent","intentState","streamReaderCancelTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","opListTask","opListReadCapability","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","textContent","items","readableStream","streamTextContent","reader","getReader","styles","pump","done","assign","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","resetStats","some","operatorListChunk","streamReader","_renderPageChunk","cleanup","stats","defer","_listeners","_defer","_deferred","transfers","cloned","WeakMap","cloneValue","has","desc","getOwnPropertyDescriptor","getPrototypeOf","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","Worker","terminateEarly","removeEventListener","onWorkerError","terminate","_setupFakeWorker","addEventListener","supportTransfers","sendTest","testObj","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","_destroy","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","exception","updatePassword","_startRenderPage","exportedData","exportedError","fontRegistry","FontInspector","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","results","metadata","Metadata","contentDispositionFilename","filename","_objs","objId","resolved","_ensureObj","RenderTask","_internalRenderTask","onContinue","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","BaseFontLoader","nativeFontFaces","styleElement","nativeFontFace","fonts","rule","getElementsByTagName","styleSheet","sheet","insertRule","cssRules","remove","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","addNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","_loadTestFont","rules","fontsToLoad","loadingContext","requests","nextRequestId","loadTestFontId","navigator","userAgent","otherRequest","shift","atob","int32","spliceString","insert","ctx","called","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","isFontReady","fillText","getImageData","removeChild","translatedData","compiledGlyphs","FontFace","registerFont","mimetype","character","cmds","current","js","cmd","compatibilityParams","freeze","_pattern_helper","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","f","ad_bc","bc_ad","old","prev","pop","angle","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","reset","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","clone","setCurrentPoint","canvasCtx","stateStack","pendingClip","pendingEOFill","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","putImageData","destPos","thisChunkHeight","elemsInThisChunk","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","scaleX","scaleY","backdrop","isEnabled","composed","layer","subtype","drawImage","composeFn","hasBackdrop","chunkSize","ceil","row","chunkHeight","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","op","fillRect","transparentCanvas","compositeCtx","beginLayout","executionStartIdx","continueCallback","argsArrayLen","fnId","chunkOperations","endTime","steps","breakIt","depObjId","objsPool","startsWith","endSMaskGroup","endLayout","dashArray","dashPhase","flatness","states","state","suspendSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","deltaTransform","clearRect","resumeSMaskGroup","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","consumePath","singularValueDecompose2dScale","getPattern","needRestore","paths","pendingTextPaths","beginPath","path","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","rise","patternTransform","fillStrokeMode","isAddToPathSet","getPathGenerator","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","restoreNeeded","isSpace","fontChar","accent","remeasure","measuredWidth","measureText","characterScaleX","isInFont","paintChar","spacingLength","charProcOperatorList","operatorListId","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","makeCssRgb","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","getAxialAlignedBoundingBox","canvasBounds","intersect","imageSmoothingEnabled","mozImageSmoothingEnabled","img","isPatternFill","compiled","j0","width1","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","pp","coords","p0","step","kk","ll","compileType3Glyph","maskCanvas","positions","images","image","map","w","h","imgToPaint","tmpCanvas","widthScale","heightScale","HTMLElement","tmpCtx","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","getCanvasPosition","appendImage","entry","tag","inverse","raw","shadingIR","ShadingIRs","fromIR","applyBoundingBox","Path2D","region","RadialAxial","colorStops","r1","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","drawTriangle","c1","c2","c3","colors","rowSize","x2","y2","x3","y3","xa","car","cag","cab","xb","cbr","cbg","cbb","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","postMessage","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","allSettled","_xml_parser","_repair","xmlDocument","SimpleXMLParser","parseFromString","_metadataMap","Map","_parse","codes","d1","d2","d3","chars","rdf","nodeName","firstChild","nextSibling","hasChildNodes","children","childNodes","jj","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","XMLParserBase","entity","onResolveEntity","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","_resolveEntities","attrStart","onError","onEndElement","pi","_parseProcessingInstruction","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","_parseContent","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_currentFragment","_stack","_errorCode","parseXml","isWhitespaceString","node","lastElement","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","addRangeListener","_onReceiveData","addProgressListener","_onProgress","addProgressiveReadListener","addProgressiveDoneListener","_onProgressiveDone","transportReady","_enqueue","_begin","_progressiveDataLength","_loaded","firstReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","requestDataRange","abort","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","_removeRangeReader","_enabled","WebGLUtils","tryInitGL","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","initSmaskGL","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","scaleLocation","offsetLocation","colorLocation","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","trigger","popup","PopupElement","modificationDate","contents","hideWrapper","render","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","getDestinationHash","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","_createPopup","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","fieldName","maxLen","maxLength","comb","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","buttonValue","selectElement","combo","options","multiSelect","multiple","option","optionElement","displayValue","exportValue","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","hideElement","dateObject","toDateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","removeAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","eventBus","dispatch","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","test","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","boxes","box","x1New","x2New","expandBoundsLTR","expandBounds","divProperties","Float64Array","boxScale","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","styleCache","_render","mozOpaque","textItems","textStyles","_processItems","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","writePngChunk","crc","crc32","deflateSyncUncompressed","literals","deflateBlocks","idat","adler","adler32","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","deflateSync","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","svgElement","loadDependencies","convertOpList","operatorIdMapping","opList","fn","opTree","opListElement","opListToTree","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","charWidth","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","defs","addFontStyle","_makeColorN_Pattern","inverseTransform","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","setStrokeAlpha","setFillAlpha","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","sourceUrl","parsedUrl","parse","host","parseUrl","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","_setReadableStream","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","createResponseStatusError","contentDisposition","_content_disposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","fixupEncoding","rfc2047decode","rfc5987decode","contentDispositionStr","iter","quot","part","rfc2231getparam","attributePattern","flags","textdecode","decoder","TextDecoder","fatal","decode","err","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","NetworkManager","getXhr","currXhrId","pendingRequests","xhr","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","getArrayBuffer","rangeHeader","abortRequest","_source","_manager","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","_onRangeRequestReaderClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","getRequestXhr","lengthComputable","isPendingRequest","_requestId","requestRange","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","pdfjsLib","require","pdfjsLibUtils","PdfPreview","initCanvas","_annotation_layer_builder","AnnotationLayerBuilder","DefaultAnnotationLayerFactory","_text_layer_builder","DefaultTextLayerFactory","TextLayerBuilder","_ui_utils","EventBus","NullL10n","ProgressBar","_pdf_link_service","PDFLinkService","SimpleLinkService","_download_manager","DownloadManager","_genericl10n","GenericL10n","_pdf_find_controller","PDFFindController","_pdf_history","PDFHistory","_pdf_page_view","PDFPageView","_pdf_single_page_viewer","PDFSinglePageViewer","_pdf_viewer","PDFViewer","_pdfjsLib","pageDiv","pdfPage","l10n","_cancelled","update","isValidRotation","isValidScrollMode","values","ScrollMode","isValidSpreadMode","SpreadMode","isPortraitOrientation","clamp","getPDFFileNameFromURL","defaultFilename","isDataSchema","reFilename","splitURI","suggestedFilename","noContextMenuHandler","preventDefault","parseQueryString","param","backtrackBeforeAllVisibleElements","getVisibleElements","scrollEl","views","sortByVisibility","horizontal","scrollTop","clientHeight","scrollLeft","clientWidth","visible","numViews","firstVisibleElementInd","binarySearchFirstItem","offsetLeft","clientLeft","offsetTop","clientTop","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","percent","last","pc","roundToDivide","getPageSizeInches","changeOrientation","approximateFraction","xinv","x_","getOutputScale","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","scaled","scrollIntoView","spot","skipOverflowHiddenElements","parent","offsetParent","scrollHeight","scrollWidth","getComputedStyle","overflow","_scaleY","_scaleX","watchScroll","viewAreaElement","debounceScroll","rAF","currentX","lastX","currentY","lastY","down","_eventHandler","normalizeWheelEventDelta","delta","deltaX","deltaY","deltaMode","MOUSE_PIXELS_PER_LINE","waitOnEventOrTimeout","delay","_off","eventHandler","WaitOnType","EVENT","_on","timeoutHandler","TIMEOUT","moveToEndOfArray","condition","moved","animationStarted","TextLayerMode","RendererType","PresentationModeState","VERTICAL_PADDING","SCROLLBAR_PADDING","MAX_AUTO_SCALE","UNKNOWN_SCALE","MAX_SCALE","MIN_SCALE","DEFAULT_SCALE","DEFAULT_SCALE_VALUE","CSS_UNITS","AutoPrintRegExp","NORMAL","CHANGING","FULLSCREEN","CANVAS","SVG","DISABLE","ENABLE","ENABLE_ENHANCE","VERTICAL","HORIZONTAL","WRAPPED","ODD","EVEN","getLanguage","getDirection","fallback","formatL10nValue","minIndex","maxIndex","currentIndex","elt","pageTop","eventName","external","eventListeners","externalListeners","bar","_indeterminate","progressSize","_percent","_updateBar","viewer","scrollbarWidth","offsetWidth","ignoreDestinationZoom","_ignoreDestinationZoom","pdfDocument","pdfViewer","pdfHistory","_pagesRefCache","pagesCount","currentPageNumber","pagesRotation","goToDestination","namedDest","explicitDest","destRef","_cachedPageNumber","cachePageRef","pushCurrentPosition","scrollPageIntoView","destArray","hash","search","phraseSearch","phrase","zoomArgs","zoom","zoomArg","zoomArgNumber","allowNegativeOffset","pagemode","nameddest","destLength","gen","allowNull","isValidExplicitDestination","back","forward","pageNum","pageRef","refStr","isPageVisible","EXPAND_DIVS_TIMEOUT","textLayerDiv","findController","renderingDone","pageIdx","textLayerRenderTask","_onUpdateTextLayerMatches","_bindMouse","endOfContent","numTextDivs","textLayerFrag","createDocumentFragment","_finishRendering","_updateMatches","matchesLength","iIndex","queryLen","mm","matchIdx","divIdx","isSelectedPage","selected","selectedMatchIdx","prevEnd","infinity","appendTextToDiv","fromOffset","toOffset","i0","i1","highlightAll","isSelected","highlightSuffix","scrollMatchIntoView","matchIndex","n0","n1","clearedUntilDivIdx","highlightMatches","pageMatches","pageMatchesLength","_convertMatches","_renderMatches","expandDivsTimer","adjustTop","getPropertyValue","divBounds","getBoundingClientRect","pageY","DISABLE_CREATE_OBJECT_URL","viewerCompatibilityParams","disableCreateObjectURL","download","blobUrl","click","msSaveBlob","downloadUrl","platform","maxTouchPoints","isAndroid","isIE","isIOS","isIOSChrome","maxCanvasPixels","webL10n","lang","_lang","_ready","setLanguage","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","xhrLoadText","onSuccess","onFailure","overrideMimeType","ontimeout","parseResource","successCallback","failureCallback","baseURL","evalString","parsedPropertiesCallback","dictionary","reBlank","reComment","reSection","reImport","reSplit","parseRawLines","rawText","extendedSyntax","parsedRawLinesCallback","entries","currentLang","genericLang","skipLang","nextEntry","loadImport","parseProperties","loadLocale","langLinks","querySelectorAll","langCount","onResourceLoaded","gResourceCount","L10nResourceLink","load","dict","innerHTML","locales","default_locale","defaultLocale","anyCaseLang","getL10nData","rv","substArguments","substIndexes","reMatch","macroName","paramName","macro","matched_text","translateElement","getAttribute","getL10nAttributes","childElementCount","nodeType","getChildElementCount","textNode","insertBefore","plural","_pluralRules","isIn","isBetween","pluralRules","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","af","ak","am","ar","asa","az","be","bem","bez","bg","bh","bm","bn","bo","brx","bs","ca","cgg","chr","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fil","fo","fr","fur","fy","ga","gd","gsw","gu","guw","gv","ha","haw","he","hr","hu","ig","is","it","iu","ja","jmc","jv","ka","kab","kaj","kcg","kde","kea","kl","km","kn","ko","ksb","ksh","ku","kw","lag","lb","lg","ln","lt","lv","mas","mg","mk","ml","mn","mo","mr","ms","mt","my","nah","naq","nb","nd","ne","nl","nn","no","nr","nso","ny","nyn","om","or","pa","pap","pl","pt","rm","ro","rof","ru","rwk","sah","saq","se","seh","ses","sg","sh","shi","sk","sl","sma","smi","smj","smn","sms","sn","so","sq","sr","ss","ssy","st","sv","sw","syr","ta","te","teo","th","ti","tig","tk","tl","tn","to","tr","tzm","uk","ve","vi","vun","wa","wae","wo","xh","xog","yo","zh","zu","getPluralRules","fallbackString","getText","shortCode","getTranslatableChildren","elementCount","getReadyState","FindState","_pdf_find_utils","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","‘","’","‚","‛","“","”","„","‟","¼","½","¾","normalizationRegex","normalize","_linkService","_eventBus","_reset","_onFindBarClose","_highlightMatches","_pageMatches","_pageMatchesLength","_selected","_state","_pdfDocument","_firstPageCapability","_shouldDirtyMatch","_dirtyMatch","_updateUIState","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","_updateAllPages","_scrollMatches","_offset","wrapped","_extractTextPromises","_pageContents","_matchesCountTotal","_pagesToSearch","_pendingFindMatches","_resumePageIdx","_query","_rawQuery","_normalizedQuery","matchesWithLength","isSubTerm","currentElem","nextElem","skipped","prevElem","matchLength","startIdx","getCharacterType","endIdx","pageContent","entireWord","_isEntireWord","queryArray","subquery","subqueryLen","_prepareMatches","caseSensitive","_calculatePhraseMatch","_calculateWordMatch","_updatePage","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","extractTextCapability","getTextContent","previous","findPrevious","currentPageIndex","_calculateMatch","numPageMatches","_updateMatch","_advanceOffsetPage","numMatches","_matchesReady","previousPage","matchesCount","_requestMatchesCount","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","CharacterType","SPACE","isAsciiAlpha","isAsciiDigit","ALPHA_LETTER","PUNCT","isThai","THAI_LETTER","isHan","HAN_LETTER","isKatakana","KATAKANA_LETTER","isHiragana","HIRAGANA_LETTER","isHalfwidthKatakana","HALFWIDTH_KATAKANA_LETTER","isDestHashesEqual","isDestArraysEqual","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","getCurrentHash","destHash","pushHash","firstDest","secondDest","isEntryEqual","_initialized","_fingerprint","_boundEvents","_isViewerInPresentationMode","active","switchInProgress","_isPagesLoaded","onPagesLoaded","resetHistory","updateUrl","reInitialized","_updateUrl","_bindEvents","history","_popStateInProgress","_blockHashChange","_currentHash","_numPositionUpdates","_uid","_maxUid","_destination","_position","_isValidState","_parseCurrentHash","_pushOrReplaceState","_updateInternalState","uid","_initialRotation","_initialBookmark","_pageHide","_unbindEvents","_updateViewareaTimeout","forceReplace","_tryPushCurrentPosition","popStateInProgress","initialBookmark","initialRotation","shouldReplace","newState","newUrl","replaceState","pushState","temporary","checkReload","perfEntry","performance","getEntriesByType","removeTemporary","checkNameddest","pdfOpenParams","newHash","hashChanged","setHash","updateViewarea","_updateViewarea","popState","_popState","pageHide","_pdf_rendering_queue","MAX_CANVAS_PIXELS","defaultViewport","renderingId","pageLabel","pdfPageRotate","hasRestrictedScaling","textLayerMode","useOnlyCssZoom","renderingQueue","textLayerFactory","annotationLayerFactory","renderer","paintTask","paintedViewportMap","renderingState","RenderingStates","INITIAL","resume","annotationLayer","textLayer","zoomLayer","totalRotation","getViewport","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotations","cancelRendering","currentZoomLayerNode","currentAnnotationNode","hide","_resetZoomLayer","loadingIconDiv","cssTransform","timestamp","isScalingRestricted","outputScale","redrawAnnotations","relativeRotation","absRotation","textLayerViewport","textRelativeRotation","textAbsRotation","transX","transY","convertToPdfPoint","FINISHED","RUNNING","canvasWrapper","createTextLayerBuilder","renderContinueCallback","cont","isHighestPriority","PAUSED","finishPaintTask","paintOnSvg","paintOnCanvas","onRenderContinue","resultPromise","setTextContentStream","createAnnotationLayerBuilder","renderCapability","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","maxScale","sfx","sfy","renderContext","ensureNotCancelled","getOperatorList","getSVG","label","PDFRenderingQueue","CLEANUP_TIMEOUT","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","currentlyVisiblePages","forceRendering","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","previousPageIndex","draw","renderHighestPriority","_base_viewer","BaseViewer","_ensurePageViewVisible","_viewerElement","_shadowViewer","_resetView","_previousPageNumber","_updateScrollDown","pageView","_pages","_currentPageNumber","previousPageView","viewerNodes","_scrollUpdate","pageSpot","_setCurrentPageNumber","_scrollIntoView","scroll","_getCurrentVisiblePage","visiblePages","_isScrollModeHorizontal","DEFAULT_CACHE_SIZE","PDFPageViewBuffer","resize","newSize","pagesToKeep","pageIdsToKeep","Set","iMax","_name","firstElementChild","removePageBorders","enablePrintAutoRotate","defaultRenderingQueue","setViewer","presentationModeState","_onBeforeDraw","_onAfterDraw","pageViewsReady","_pagesCapability","settled","resetCurrentPageView","_resetCurrentPageView","_pageLabels","currentPageLabel","currentScale","_currentScale","_setScale","currentScaleValue","_currentScaleValue","_pagesRotation","firstPagePromise","onePageRendered","_onePageRenderedCapability","pagesPromise","_getVisiblePages","_cancelRendering","setDocument","_buffer","firstPdfPage","firstPageView","setPdfPage","_spreadMode","_updateSpreadMode","_onePageRenderedOrForceFetch","getPagesLeft","labels","setPageLabel","_location","_pagesRequests","_scrollMode","_updateScrollMode","newScale","newValue","noScroll","preset","oldScale","isSameScale","presetValue","isInPresentationMode","isChangingPresentationMode","_setScaleUpdatePages","currentPage","noPadding","hPadding","vPadding","pageWidthScale","pageHeightScale","horizontalScale","pageWidth","pageHeight","boundingRect","convertToViewportPoint","firstPage","normalizedScaleValue","currentPageView","getPagePoint","intLeft","intTop","numVisiblePages","newCacheSize","_updateHelper","_updateLocation","contains","focus","isHorizontalScrollbarEnabled","isVerticalScrollbarEnabled","scrollAhead","getHighestPriority","_ensurePdfPageLoaded","renderView","hasEqualPageSizes","pagesOverview","isFirstPagePortrait","scrollMode","toggle","spreadMode","pages","parity","spread","currentId","stillFullyVisible"],"mappings":"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A,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACApyC,GAAA,EACAqyC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,GACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAznF,GAAA,EACA0nF,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,GACAlwC,GAAA,EACAmwC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,GACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GACAC,IAAA,GACAC,GAAA,GACAC,GAAA,GACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAvzB,GAAA,EACAwzB,IAAA,GACAC,GAAA,GACA15C,GAAA,EACA25C,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,E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","file":"js/pdfjs/pdf_js-b16e9d1e4f72787a789f.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__w_pdfjs_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__w_pdfjs_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__w_pdfjs_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addLinkAttributes\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.addLinkAttributes;\n  }\n});\nObject.defineProperty(exports, \"getFilenameFromUrl\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.getFilenameFromUrl;\n  }\n});\nObject.defineProperty(exports, \"LinkTarget\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.LinkTarget;\n  }\n});\nObject.defineProperty(exports, \"loadScript\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.loadScript;\n  }\n});\nObject.defineProperty(exports, \"PDFDateString\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.PDFDateString;\n  }\n});\nObject.defineProperty(exports, \"RenderingCancelledException\", {\n  enumerable: true,\n  get: function () {\n    return _display_utils.RenderingCancelledException;\n  }\n});\nObject.defineProperty(exports, \"build\", {\n  enumerable: true,\n  get: function () {\n    return _api.build;\n  }\n});\nObject.defineProperty(exports, \"getDocument\", {\n  enumerable: true,\n  get: function () {\n    return _api.getDocument;\n  }\n});\nObject.defineProperty(exports, \"LoopbackPort\", {\n  enumerable: true,\n  get: function () {\n    return _api.LoopbackPort;\n  }\n});\nObject.defineProperty(exports, \"PDFDataRangeTransport\", {\n  enumerable: true,\n  get: function () {\n    return _api.PDFDataRangeTransport;\n  }\n});\nObject.defineProperty(exports, \"PDFWorker\", {\n  enumerable: true,\n  get: function () {\n    return _api.PDFWorker;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _api.version;\n  }\n});\nObject.defineProperty(exports, \"CMapCompressionType\", {\n  enumerable: true,\n  get: function () {\n    return _util.CMapCompressionType;\n  }\n});\nObject.defineProperty(exports, \"createObjectURL\", {\n  enumerable: true,\n  get: function () {\n    return _util.createObjectURL;\n  }\n});\nObject.defineProperty(exports, \"createPromiseCapability\", {\n  enumerable: true,\n  get: function () {\n    return _util.createPromiseCapability;\n  }\n});\nObject.defineProperty(exports, \"createValidAbsoluteUrl\", {\n  enumerable: true,\n  get: function () {\n    return _util.createValidAbsoluteUrl;\n  }\n});\nObject.defineProperty(exports, \"InvalidPDFException\", {\n  enumerable: true,\n  get: function () {\n    return _util.InvalidPDFException;\n  }\n});\nObject.defineProperty(exports, \"MissingPDFException\", {\n  enumerable: true,\n  get: function () {\n    return _util.MissingPDFException;\n  }\n});\nObject.defineProperty(exports, \"OPS\", {\n  enumerable: true,\n  get: function () {\n    return _util.OPS;\n  }\n});\nObject.defineProperty(exports, \"PasswordResponses\", {\n  enumerable: true,\n  get: function () {\n    return _util.PasswordResponses;\n  }\n});\nObject.defineProperty(exports, \"PermissionFlag\", {\n  enumerable: true,\n  get: function () {\n    return _util.PermissionFlag;\n  }\n});\nObject.defineProperty(exports, \"removeNullCharacters\", {\n  enumerable: true,\n  get: function () {\n    return _util.removeNullCharacters;\n  }\n});\nObject.defineProperty(exports, \"shadow\", {\n  enumerable: true,\n  get: function () {\n    return _util.shadow;\n  }\n});\nObject.defineProperty(exports, \"UnexpectedResponseException\", {\n  enumerable: true,\n  get: function () {\n    return _util.UnexpectedResponseException;\n  }\n});\nObject.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n  enumerable: true,\n  get: function () {\n    return _util.UNSUPPORTED_FEATURES;\n  }\n});\nObject.defineProperty(exports, \"Util\", {\n  enumerable: true,\n  get: function () {\n    return _util.Util;\n  }\n});\nObject.defineProperty(exports, \"VerbosityLevel\", {\n  enumerable: true,\n  get: function () {\n    return _util.VerbosityLevel;\n  }\n});\nObject.defineProperty(exports, \"AnnotationLayer\", {\n  enumerable: true,\n  get: function () {\n    return _annotation_layer.AnnotationLayer;\n  }\n});\nObject.defineProperty(exports, \"apiCompatibilityParams\", {\n  enumerable: true,\n  get: function () {\n    return _api_compatibility.apiCompatibilityParams;\n  }\n});\nObject.defineProperty(exports, \"GlobalWorkerOptions\", {\n  enumerable: true,\n  get: function () {\n    return _worker_options.GlobalWorkerOptions;\n  }\n});\nObject.defineProperty(exports, \"renderTextLayer\", {\n  enumerable: true,\n  get: function () {\n    return _text_layer.renderTextLayer;\n  }\n});\nObject.defineProperty(exports, \"SVGGraphics\", {\n  enumerable: true,\n  get: function () {\n    return _svg.SVGGraphics;\n  }\n});\n\nvar _display_utils = __w_pdfjs_require__(1);\n\nvar _api = __w_pdfjs_require__(5);\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _annotation_layer = __w_pdfjs_require__(16);\n\nvar _api_compatibility = __w_pdfjs_require__(7);\n\nvar _worker_options = __w_pdfjs_require__(10);\n\nvar _text_layer = __w_pdfjs_require__(17);\n\nvar _svg = __w_pdfjs_require__(18);\n\nconst pdfjsVersion = '2.5.207';\nconst pdfjsBuild = '0974d605';\n{\n  const {\n    isNodeJS\n  } = __w_pdfjs_require__(4);\n\n  if (isNodeJS) {\n    const PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n\n    (0, _api.setPDFNetworkStreamFactory)(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n\n    let PDFFetchStream;\n\n    if ((0, _display_utils.isFetchSupported)()) {\n      PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n    }\n\n    (0, _api.setPDFNetworkStreamFactory)(params => {\n      if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n        return new PDFFetchStream(params);\n      }\n\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addLinkAttributes = addLinkAttributes;\nexports.getFilenameFromUrl = getFilenameFromUrl;\nexports.isFetchSupported = isFetchSupported;\nexports.isValidFetchUrl = isValidFetchUrl;\nexports.loadScript = loadScript;\nexports.deprecated = deprecated;\nexports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nexports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n}\n\nexports.DOMCanvasFactory = DOMCanvasFactory;\n\nclass DOMCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = false\n  }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n    }\n\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n\n    if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        let cMapData;\n\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = (0, _util.stringToBytes)(await response.text());\n        }\n\n        return {\n          cMapData,\n          compressionType\n        };\n      }).catch(reason => {\n        throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = (0, _util.stringToBytes)(request.responseText);\n          }\n\n          if (cMapData) {\n            resolve({\n              cMapData,\n              compressionType\n            });\n            return;\n          }\n        }\n\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n    });\n  }\n\n}\n\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\nclass DOMSVGFactory {\n  create(width, height) {\n    (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n    return svg;\n  }\n\n  createElement(type) {\n    (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n    return document.createElementNS(SVG_NS, type);\n  }\n\n}\n\nexports.DOMSVGFactory = DOMSVGFactory;\n\nclass PageViewport {\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n\n      default:\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  convertToViewportPoint(x, y) {\n    return _util.Util.applyTransform([x, y], this.transform);\n  }\n\n  convertToViewportRectangle(rect) {\n    const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n    const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  convertToPdfPoint(x, y) {\n    return _util.Util.applyInverseTransform([x, y], this.transform);\n  }\n\n}\n\nexports.PageViewport = PageViewport;\n\nclass RenderingCancelledException extends _util.BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n\n}\n\nexports.RenderingCancelledException = RenderingCancelledException;\nconst LinkTarget = {\n  NONE: 0,\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4\n};\nexports.LinkTarget = LinkTarget;\n\nfunction addLinkAttributes(link, {\n  url,\n  target,\n  rel,\n  enabled = true\n} = {}) {\n  (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n  const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\";\n\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n\n  link.target = targetStr;\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      (0, _util.warn)(`Timer is already running for ${name}`);\n    }\n\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      (0, _util.warn)(`Timer has not been started for ${name}`);\n    }\n\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n\n    for (const time of this.times) {\n      const name = time.name;\n\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n\n    return outBuf.join(\"\");\n  }\n\n}\n\nexports.StatTimer = StatTimer;\n\nfunction isFetchSupported() {\n  return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const {\n      protocol\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false;\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = resolve;\n\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  static toDateObject(input) {\n    if (!input || !(0, _util.isString)(input)) {\n      return null;\n    }\n\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    }\n\n    const matches = pdfDateStringRegex.exec(input);\n\n    if (!matches) {\n      return null;\n    }\n\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n\n}\n\nexports.PDFDateString = PDFDateString;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createPromiseCapability = createPromiseCapability;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isArrayEqual = isArrayEqual;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.removeNullCharacters = removeNullCharacters;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\nexports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n__w_pdfjs_require__(3);\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nexports.PermissionFlag = PermissionFlag;\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nexports.TextRenderingMode = TextRenderingMode;\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nexports.ImageKind = ImageKind;\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nexports.AnnotationType = AnnotationType;\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\"\n};\nexports.AnnotationStateModelType = AnnotationStateModelType;\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\"\n};\nexports.AnnotationMarkedState = AnnotationMarkedState;\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\"\n};\nexports.AnnotationReviewState = AnnotationReviewState;\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nexports.AnnotationReplyType = AnnotationReplyType;\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nexports.AnnotationFlag = AnnotationFlag;\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\"\n};\nexports.StreamType = StreamType;\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\"\n};\nexports.FontType = FontType;\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nexports.VerbosityLevel = VerbosityLevel;\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nexports.CMapCompressionType = CMapCompressionType;\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nexports.OPS = OPS;\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\"\n};\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nexports.PasswordResponses = PasswordResponses;\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n\n  try {\n    base = new URL(baseUrl);\n\n    if (!base.origin || base.origin === \"null\") {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\n\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\n\nexports.BaseException = BaseException;\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n\n}\n\nexports.PasswordException = PasswordException;\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n\n}\n\nexports.UnknownErrorException = UnknownErrorException;\n\nclass InvalidPDFException extends BaseException {}\n\nexports.InvalidPDFException = InvalidPDFException;\n\nclass MissingPDFException extends BaseException {}\n\nexports.MissingPDFException = MissingPDFException;\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n\n}\n\nexports.UnexpectedResponseException = UnexpectedResponseException;\n\nclass FormatError extends BaseException {}\n\nexports.FormatError = FormatError;\n\nclass AbortException extends BaseException {}\n\nexports.AbortException = AbortException;\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  const strBuf = [];\n\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n\n  return bytes;\n}\n\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n\n  let resultLength = 0;\n\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\n\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  }\n\n};\nexports.IsLittleEndianCached = IsLittleEndianCached;\n\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  }\n\n};\nexports.IsEvalSupportedCached = IsEvalSupportedCached;\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n\n  static apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  }\n\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n\n    return r;\n  }\n\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n}\n\nexports.Util = Util;\nconst PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n        strBuf = [];\n\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    }\n\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = function createObjectURLClosure() {\n  const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], {\n        type: contentType\n      });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n      const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n\n    return buffer;\n  };\n}();\n\nexports.createObjectURL = createObjectURL;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _is_node = __w_pdfjs_require__(4);\n\n;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNodeJS = void 0;\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !process.versions.electron;\nexports.isNodeJS = isNodeJS;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDocument = getDocument;\nexports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\nexports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _display_utils = __w_pdfjs_require__(1);\n\nvar _font_loader = __w_pdfjs_require__(6);\n\nvar _api_compatibility = __w_pdfjs_require__(7);\n\nvar _canvas = __w_pdfjs_require__(8);\n\nvar _worker_options = __w_pdfjs_require__(10);\n\nvar _is_node = __w_pdfjs_require__(4);\n\nvar _message_handler = __w_pdfjs_require__(11);\n\nvar _metadata = __w_pdfjs_require__(12);\n\nvar _transport_stream = __w_pdfjs_require__(14);\n\nvar _webgl = __w_pdfjs_require__(15);\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536;\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nlet createPDFNetworkStream;\n\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n  let source;\n\n  if (typeof src === \"string\") {\n    source = {\n      url: src\n    };\n  } else if ((0, _util.isArrayBuffer)(src)) {\n    source = {\n      data: src\n    };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = {\n      range: src\n    };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n    }\n\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n    }\n\n    source = src;\n  }\n\n  const params = Object.create(null);\n  let rangeTransport = null,\n      worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      const pdfBytes = source[key];\n\n      if (typeof pdfBytes === \"string\") {\n        params[key] = (0, _util.stringToBytes)(pdfBytes);\n      } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n      }\n\n      continue;\n    }\n\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  (0, _util.setVerbosityLevel)(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: _worker_options.GlobalWorkerOptions.workerPort\n    };\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const docId = task.docId;\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n\n    const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n    const networkStreamPromise = new Promise(function (resolve) {\n      let networkStream;\n\n      if (rangeTransport) {\n        networkStream = new _transport_stream.PDFDataTransportStream({\n          length: params.length,\n          initialData: params.initialData,\n          progressiveDone: params.progressiveDone,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        }, rangeTransport);\n      } else if (!params.data) {\n        networkStream = createPDFNetworkStream({\n          url: params.url,\n          length: params.length,\n          httpHeaders: params.httpHeaders,\n          withCredentials: params.withCredentials,\n          rangeChunkSize: params.rangeChunkSize,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        });\n      }\n\n      resolve(networkStream);\n    });\n    return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n      messageHandler.postMessageTransfers = worker.postMessageTransfers;\n      const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\n\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n\n  return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n    docId,\n    apiVersion: '2.5.207',\n    source: {\n      data: source.data,\n      url: source.url,\n      password: source.password,\n      disableAutoFetch: source.disableAutoFetch,\n      rangeChunkSize: source.rangeChunkSize,\n      length: source.length\n    },\n    maxImageSize: source.maxImageSize,\n    disableFontFace: source.disableFontFace,\n    postMessageTransfers: worker.postMessageTransfers,\n    docBaseUrl: source.docBaseUrl,\n    ignoreErrors: source.ignoreErrors,\n    isEvalSupported: source.isEvalSupported,\n    fontExtraProperties: source.fontExtraProperties\n  }).then(function (workerId) {\n    if (worker.destroyed) {\n      throw new Error(\"Worker was destroyed\");\n    }\n\n    return workerId;\n  });\n}\n\nconst PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = (0, _util.createPromiseCapability)();\n      this._transport = null;\n      this._worker = null;\n      this.docId = \"d\" + nextDocumentId++;\n      this.destroyed = false;\n      this.onPassword = null;\n      this.onProgress = null;\n      this.onUnsupportedFeature = null;\n    }\n\n    get promise() {\n      return this._capability.promise;\n    }\n\n    destroy() {\n      this.destroyed = true;\n      const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n\n        if (this._worker) {\n          this._worker.destroy();\n\n          this._worker = null;\n        }\n      });\n    }\n\n  }\n\n  return PDFDocumentLoadingTask;\n}();\n\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = (0, _util.createPromiseCapability)();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n\n}\n\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\n\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  getData() {\n    return this._transport.getData();\n  }\n\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n}\n\nexports.PDFDocumentProxy = PDFDocumentProxy;\n\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    return new _display_utils.PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  getAnnotations({\n    intent = null\n  } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n      this.annotationsIntent = intent;\n    }\n\n    return this.annotationsPromise;\n  }\n\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n\n    const intentState = this.intentStates[renderingIntent];\n\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n    const webGLContext = new _webgl.WebGLContext({\n      enable: enableWebGL\n    });\n\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    intentState.displayReadyCapability.promise.then(transparency => {\n      if (this.pendingCleanup) {\n        complete();\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.time(\"Rendering\");\n      }\n\n      internalRenderTask.initializeGraphics(transparency);\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        const i = intentState.renderTasks.indexOf(opListTask);\n\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent\n      });\n    }\n\n    return intentState.opListReadCapability.promise;\n  }\n\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      normalizeWhitespace: normalizeWhitespace === true,\n      combineTextItems: disableCombineTextItems !== true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n      size(textContent) {\n        return textContent.items.length;\n      }\n\n    });\n  }\n\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      pump();\n    });\n  }\n\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n\n      if (intent === \"oplist\") {\n        return;\n      }\n\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(function () {});\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup || Object.keys(this.intentStates).some(intent => {\n      const intentState = this.intentStates[intent];\n      return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n    })) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n\n    if (resetStats && this._stats) {\n      this._stats = new _display_utils.StatTimer();\n    }\n\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n\n    if (!intentState) {\n      return;\n    }\n\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  _pumpOperatorList(args) {\n    (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n    const reader = readableStream.getReader();\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        this._renderPageChunk(value, intentState);\n\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n\n          for (let i = 0; i < intentState.renderTasks.length; i++) {\n            intentState.renderTasks[i].operatorListChanged();\n          }\n\n          this._tryCleanup();\n        }\n\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n\n    pump();\n  }\n\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n    if (!intentState.streamReader) {\n      return;\n    }\n\n    if (!force) {\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n\n      if (reason instanceof _display_utils.RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n\n    intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return;\n    }\n\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n\n      return false;\n    });\n    this.cleanup();\n  }\n\n  get stats() {\n    return this._stats;\n  }\n\n}\n\nexports.PDFPageProxy = PDFPageProxy;\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n\n      if (cloned.has(value)) {\n        return cloned.get(value);\n      }\n\n      let buffer, result;\n\n      if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n        const transferable = transfers && transfers.includes(buffer);\n\n        if (transferable) {\n          result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n        } else {\n          result = new value.constructor(value);\n        }\n\n        cloned.set(value, result);\n        return result;\n      }\n\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result);\n\n      for (const i in value) {\n        let desc,\n            p = value;\n\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n          }\n\n          continue;\n        }\n\n        result[i] = cloneValue(desc.value);\n      }\n\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, {\n          data: obj\n        });\n      });\n\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = {\n      data: cloneValue(obj)\n    };\n\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n\n}\n\nexports.LoopbackPort = LoopbackPort;\n\nconst PDFWorker = function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (_is_node.isNodeJS && typeof require === \"function\") {\n    isWorkerDisabled = true;\n    fallbackWorkerSrc = \"./pdf.worker.js\";\n  } else if (typeof document === \"object\" && \"currentScript\" in document) {\n    const pdfjsFilePath = document.currentScript && document.currentScript.src;\n\n    if (pdfjsFilePath) {\n      fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n    }\n  }\n\n  function getWorkerSrc() {\n    if (_worker_options.GlobalWorkerOptions.workerSrc) {\n      return _worker_options.GlobalWorkerOptions.workerSrc;\n    }\n\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!_is_node.isNodeJS) {\n        (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n\n      return fallbackWorkerSrc;\n    }\n\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {}\n\n    return mainWorkerMessageHandler || null;\n  }\n\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n\n    fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        return mainWorkerMessageHandler;\n      }\n\n      if (_is_node.isNodeJS && typeof require === \"function\") {\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n\n      await (0, _display_utils.loadScript)(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  class PDFWorker {\n    constructor({\n      name = null,\n      port = null,\n      verbosity = (0, _util.getVerbosityLevel)()\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n      this._readyCapability = (0, _util.createPromiseCapability)();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n\n        this._initializeFromPort(port);\n\n        return;\n      }\n\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n      this._messageHandler.on(\"ready\", function () {});\n\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n            workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n          }\n\n          const worker = new Worker(workerSrc);\n          const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              terminateEarly();\n            }\n          };\n\n          worker.addEventListener(\"error\", onWorkerError);\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n\n            if (this.destroyed) {\n              terminateEarly();\n              return;\n            }\n\n            if (data) {\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            } else {\n              this._setupFakeWorker();\n\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n\n            if (this.destroyed) {\n              terminateEarly();\n              return;\n            }\n\n            try {\n              sendTest();\n            } catch (e) {\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              (0, _util.warn)(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          sendTest();\n          return;\n        } catch (e) {\n          (0, _util.info)(\"The worker has been disabled.\");\n        }\n      }\n\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        (0, _util.warn)(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n          return;\n        }\n\n        const port = new LoopbackPort();\n        this._port = port;\n        const id = \"fake\" + nextFakeWorkerId++;\n        const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n        const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n\n        this._readyCapability.resolve();\n\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity\n        });\n      }).catch(reason => {\n        this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n      });\n    }\n\n    destroy() {\n      this.destroyed = true;\n\n      if (this._webWorker) {\n        this._webWorker.terminate();\n\n        this._webWorker = null;\n      }\n\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n\n        this._messageHandler = null;\n      }\n    }\n\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n\n  }\n\n  return PDFWorker;\n}();\n\nexports.PDFWorker = PDFWorker;\n\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new _font_loader.FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked\n    });\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = (0, _util.createPromiseCapability)();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    }\n\n    const waitOn = [];\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n      this._fullReader = this._networkStream.getFullReader();\n\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = (0, _util.createPromiseCapability)();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength\n        });\n      }, headersCapability.reject);\n      return headersCapability.promise;\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new _util.PasswordException(ex.message, ex.code);\n          break;\n\n        case \"InvalidPDFException\":\n          reason = new _util.InvalidPDFException(ex.message);\n          break;\n\n        case \"MissingPDFException\":\n          reason = new _util.MissingPDFException(ex.message);\n          break;\n\n        case \"UnexpectedResponseException\":\n          reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n          break;\n\n        case \"UnknownErrorException\":\n          reason = new _util.UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n\n      loadingTask._capability.reject(reason);\n    });\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = (0, _util.createPromiseCapability)();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password\n          });\n        };\n\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n      }\n\n      return this._passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length\n        });\n      }\n\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const page = this.pageCache[data.pageIndex];\n\n      page._startRenderPage(data.transparency, data.intent);\n    });\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const [id, type, exportedData] = data;\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            (0, _util.warn)(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n\n          if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              }\n\n            };\n          }\n\n          const font = new _font_loader.FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry\n          });\n          this.fontLoader.bind(font).catch(reason => {\n            return messageHandler.sendWithPromise(\"FontFallback\", {\n              id\n            });\n          }).finally(() => {\n            if (!params.fontExtraProperties && font.data) {\n              font.data = null;\n            }\n\n            this.commonObjs.resolve(id, font);\n          });\n          break;\n\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n          if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n\n          break;\n\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n\n      return undefined;\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total\n        });\n      }\n    });\n    messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n\n        fetched = true;\n        this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n          sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n        }).catch(function (reason) {\n          sink.error(reason);\n        });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({\n    featureId\n  }) {\n    if (this.destroyed) {\n      return;\n    }\n\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n      this.pageCache[pageIndex] = page;\n      return page;\n    });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref\n    }).catch(function (reason) {\n      return Promise.reject(new Error(reason));\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n      return {\n        info: results[0],\n        metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n        contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n      };\n    });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n          }\n        }\n      }\n\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return (0, _util.shadow)(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace\n    });\n  }\n\n}\n\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n\n    return this._objs[objId] = {\n      capability: (0, _util.createPromiseCapability)(),\n      data: null,\n      resolved: false\n    };\n  }\n\n  get(objId, callback = null) {\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n\n      return null;\n    }\n\n    const obj = this._objs[objId];\n\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n\n}\n\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n    this.onContinue = null;\n  }\n\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n}\n\nconst InternalRenderTask = function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = (0, _util.createPromiseCapability)();\n      this.task = new RenderTask(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n        }\n\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background\n      } = this.params;\n      this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n\n      this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n\n      if (this.cancelled) {\n        return;\n      }\n\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n\n          this.callback();\n        }\n      }\n    }\n\n  }\n\n  return InternalRenderTask;\n}();\n\nconst version = '2.5.207';\nexports.version = version;\nconst build = '0974d605';\nexports.build = build;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontLoader = exports.FontFaceObject = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n    }\n\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    if (font.attached || font.missingFile) {\n      return;\n    }\n\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n          });\n\n          (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n\n      return;\n    }\n\n    const rule = font.createFontFaceRule();\n\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  get isSyncFontLoadingSupported() {\n    (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  get _loadTestFont() {\n    (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n\n}\n\nlet FontLoader;\nexports.FontLoader = FontLoader;\n{\n  exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n\n      if (typeof navigator === \"undefined\") {\n        supported = true;\n      } else {\n        const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n        if (m && m[1] >= 14) {\n          supported = true;\n        }\n      }\n\n      return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n      };\n\n      return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      function int32(data, offset) {\n        return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n      }\n\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n\n      let i, ii;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n      let called = 0;\n\n      function isFontReady(name, callback) {\n        called++;\n\n        if (called > 30) {\n          (0, _util.warn)(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976;\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858;\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n      }\n\n      if (i < loadTestFontId.length) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n      }\n\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n      const names = [];\n\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n\n      names.push(loadTestFontId);\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n\n      document.body.appendChild(div);\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n    }\n\n  };\n}\n\nclass FontFaceObject {\n  constructor(translatedData, {\n    isEvalSupported = true,\n    disableFontFace = false,\n    ignoreErrors = false,\n    onUnsupportedFeature = null,\n    fontRegistry = null\n  }) {\n    this.compiledGlyphs = Object.create(null);\n\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n        });\n      }\n\n      (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n      return this.compiledGlyphs[character] = function (c, size) {};\n    }\n\n    if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n      let args,\n          js = \"\";\n\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n    }\n\n    return this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n\n        c[current.cmd].apply(c, current.args);\n      }\n    };\n  }\n\n}\n\nexports.FontFaceObject = FontFaceObject;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apiCompatibilityParams = void 0;\n\nvar _is_node = __w_pdfjs_require__(4);\n\nconst compatibilityParams = Object.create(null);\n{\n  (function checkFontFace() {\n    if (_is_node.isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\nexports.apiCompatibilityParams = apiCompatibilityParams;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _pattern_helper = __w_pdfjs_require__(9);\n\nvar MIN_FONT_SIZE = 16;\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\nvar MIN_WIDTH_FACTOR = 0.65;\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      }\n    });\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        var m = this._transformMatrix;\n        var a = m[0],\n            b = m[1],\n            c = m[2],\n            d = m[3],\n            e = m[4],\n            f = m[5];\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n        return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n      }\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n\n      this._transformStack.push(old);\n\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n\n      if (prev) {\n        this._transformMatrix = prev;\n\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n      var m = this._transformMatrix;\n      this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = function CachedCanvasesClosure() {\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n      var canvasEntry;\n\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n\n      return canvasEntry;\n    },\n\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    }\n\n  };\n  return CachedCanvases;\n}();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n  var width = imgData.width,\n      height = imgData.height;\n  var i,\n      j,\n      j0,\n      width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  var lineSize = width + 7 & ~7,\n      data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n      pos = 0,\n      ii;\n\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n        elem = data0[i];\n\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  var count = 0;\n  pos = 0;\n\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n\n    while (p < end && !points[p]) {\n      p++;\n    }\n\n    if (p === end) {\n      continue;\n    }\n\n    var coords = [p % width1, i];\n    var type = points[p],\n        p0 = p,\n        pp;\n\n    do {\n      var step = steps[type];\n\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n\n      if (pp !== 5 && pp !== 10) {\n        type = pp;\n        points[p] = 0;\n      } else {\n        type = pp & 0x33 * type >> 4;\n        points[p] &= type >> 2 | type << 2;\n      }\n\n      coords.push(p % width1);\n      coords.push(p / width1 | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = function CanvasExtraStateClosure() {\n  function CanvasExtraState() {\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textRise = 0;\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  };\n  return CanvasExtraState;\n}();\n\nvar CanvasGraphics = function CanvasGraphicsClosure() {\n  var EXECUTION_TIME = 15;\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n    if (canvasCtx) {\n      addContextCurrentTransform(canvasCtx);\n    }\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    var height = imgData.height,\n        width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n        destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = width + 7 >> 3;\n      var white = 0xffffffff;\n      var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n\n        for (j = elemsInThisChunk; j--;) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n        width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      var destPos = 3;\n\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n        bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n        bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = layerData[i] * alpha * scale | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n\n    for (var i = 3; i < length; i += 4) {\n      var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n    }\n  }\n\n  function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n    var composeFn;\n\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n\n      composeFn(maskData.data, layerData.data, transferMap);\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n    var backdrop = smask.backdrop || null;\n\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop\n        }\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n\n    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null\n    }) {\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== _util.OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n\n          steps = 0;\n        }\n      }\n    },\n    endDrawing: function CanvasGraphics_endDrawing() {\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n\n    setRenderingIntent(intent) {},\n\n    setFlatness(flatness) {},\n\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n\n            this.current.activeSMask = value ? this.tempSMask : null;\n\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n      this.ctx.restore();\n      this.ctx.save();\n      copyCtxState(groupCtx, this.ctx);\n      this.current.resumeSMaskCtx = groupCtx;\n\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n\n      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n        this.pendingClip = null;\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n      this._cachedGetSinglePixelWidth = null;\n    },\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n          y = current.y;\n\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case _util.OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n\n          case _util.OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n\n          case _util.OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n\n          case _util.OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n            j += 6;\n            break;\n\n          case _util.OPS.curveTo2:\n            ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n\n          case _util.OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n\n          case _util.OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      ctx.globalAlpha = this.current.strokeAlpha;\n\n      if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n        ctx.save();\n        const transform = ctx.mozCurrentTransform;\n\n        const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n        ctx.stroke();\n      }\n\n      if (consumePath) {\n        this.consumePath();\n      }\n\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = _util.IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return;\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n      let bold = \"normal\";\n\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n      let browserFontSize = size;\n\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n\n      this.current.fontSizeScale = size / browserFontSize;\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      const patternFill = current.patternFill && !font.missingFile;\n      var addToPath;\n\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.fill();\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      } else {\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.fillText(character, x, y);\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      const {\n        context: ctx\n      } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n\n      return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n      var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n      ctx.save();\n      let patternTransform;\n\n      if (current.patternFill) {\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n      var x = 0,\n          i;\n\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n\n        if ((0, _util.isNum)(glyph)) {\n          x += spacingDir * glyph * fontSize / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n          }\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n            }\n          }\n        }\n\n        var charWidth;\n\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      ctx.restore();\n    },\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n\n      this._cachedGetSinglePixelWidth = null;\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n\n        if ((0, _util.isNum)(glyph)) {\n          spacingLength = spacingDir * glyph * fontSize / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n        if (!operatorList) {\n          (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n        width = transformed[0] * fontSize + spacing;\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n\n      ctx.restore();\n      this.processingType3 = null;\n    },\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n          }\n        };\n        pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n      } else {\n        pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n      }\n\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = _util.Util.makeCssRgb(r, g, b);\n\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = _util.Util.makeCssRgb(r, g, b);\n\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n      this.save();\n      var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n      var inv = ctx.mozCurrentTransformInverse;\n\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = _util.Util.applyTransform([0, 0], inv);\n\n        var br = _util.Util.applyTransform([0, height], inv);\n\n        var ul = _util.Util.applyTransform([width, 0], inv);\n\n        var ur = _util.Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      (0, _util.unreachable)(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      (0, _util.unreachable)(\"Should not call beginImageData\");\n    },\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n\n      if (!group.isolated) {\n        (0, _util.info)(\"TODO: Support non-isolated groups.\");\n      }\n\n      if (group.knockout) {\n        (0, _util.warn)(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n      var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n      bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n          scaleY = 1;\n\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n\n      if (group.smask) {\n        cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n      }\n\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null\n        });\n      } else {\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n      this.current.activeSMask = null;\n    },\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n\n      this.restore();\n    },\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n          height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({\n            data: img.data,\n            width,\n            height\n          });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n      putBinaryImageMask(maskCtx, img);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n      putBinaryImageMask(maskCtx, imgData);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      var ctx = this.ctx;\n\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n            height = image.height;\n        var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, image);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height\n        });\n      }\n\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n      this.save();\n      ctx.scale(1 / width, -1 / height);\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n          b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n          d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n      var imgToPaint, tmpCanvas;\n\n      if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n          paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n\n      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n        var newWidth = paintWidth,\n            newHeight = paintHeight;\n\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n\n        tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n\n      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3]\n        });\n      }\n\n      this.restore();\n    },\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h\n          });\n        }\n\n        ctx.restore();\n      }\n    },\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n    paintXObject: function CanvasGraphics_paintXObject() {\n      (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n    },\n    markPoint: function CanvasGraphics_markPoint(tag) {},\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n    beginCompat: function CanvasGraphics_beginCompat() {},\n    endCompat: function CanvasGraphics_endCompat() {},\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n\n        this.pendingClip = null;\n      }\n\n      ctx.beginPath();\n    },\n\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n    }\n  };\n\n  for (var op in _util.OPS) {\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n}();\n\nexports.CanvasGraphics = CanvasGraphics;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getShadingPatternFromIR = getShadingPatternFromIR;\nexports.TilingPattern = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n\n        return grad;\n      }\n    };\n  }\n};\n\nvar createMeshCanvas = function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    var coords = context.coords,\n        colors = context.colors;\n    var bytes = data.data,\n        rowSize = data.width * 4;\n    var tmp;\n\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n    if (y1 >= y3) {\n      return;\n    }\n\n    var c1r = colors[c1],\n        c1g = colors[c1 + 1],\n        c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n        c2g = colors[c2 + 1],\n        c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n        c3g = colors[c3 + 1],\n        c3b = colors[c3 + 2];\n    var minY = Math.round(y1),\n        maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n\n        bytes[j++] = car - (car - cbr) * k | 0;\n        bytes[j++] = cag - (cag - cbg) * k | 0;\n        bytes[j++] = cab - (cab - cbb) * k | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n            drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n          }\n        }\n\n        break;\n\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n        }\n\n        break;\n\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n    var EXPECTED_SCALE = 1.1;\n    var MAX_PATTERN_SIZE = 3000;\n    var BORDER_SIZE = 2;\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n    var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n    var canvas, tmpCanvas, i, ii;\n\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context\n      });\n      tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n      var tmpCtx = tmpCanvas.context;\n      var data = tmpCtx.createImageData(width, height);\n\n      if (backgroundColor) {\n        var bytes = data.data;\n\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n\n  return createMeshCanvas;\n}();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n\n        if (shadingFill) {\n          scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n          if (matrix) {\n            var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      }\n    };\n  }\n};\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      }\n    };\n  }\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2\n  };\n  var MAX_PATTERN_SIZE = 3000;\n\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n      (0, _util.info)(\"TilingType: \" + tilingType);\n      var x0 = bbox[0],\n          y0 = bbox[1],\n          x1 = bbox[2],\n          y1 = bbox[3];\n\n      var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n      var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n      var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n      var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n      var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n      graphics.executeOperatorList(operatorList);\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n    getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n      step = Math.abs(step);\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n\n      return {\n        scale,\n        size\n      };\n    },\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n      const context = graphics.ctx,\n            current = graphics.current;\n\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n\n        case PaintType.UNCOLORED:\n          var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n\n        default:\n          throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    }\n  };\n  return TilingPattern;\n}();\n\nexports.TilingPattern = TilingPattern;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlobalWorkerOptions = void 0;\nconst GlobalWorkerOptions = Object.create(null);\nexports.GlobalWorkerOptions = GlobalWorkerOptions;\nGlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\nGlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageHandler = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\n\nfunction wrapReason(reason) {\n  if (typeof reason !== \"object\" || reason === null) {\n    return reason;\n  }\n\n  switch (reason.name) {\n    case \"AbortException\":\n      return new _util.AbortException(reason.message);\n\n    case \"MissingPDFException\":\n      return new _util.MissingPDFException(reason.message);\n\n    case \"UnexpectedResponseException\":\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n    case \"UnknownErrorException\":\n      return new _util.UnknownErrorException(reason.message, reason.details);\n\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n\n      if (data.stream) {\n        this._processStreamMessage(data);\n\n        return;\n      }\n\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n\n        return;\n      }\n\n      const action = this.actionHandler[data.action];\n\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.DATA,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.ERROR,\n            callbackId: data.callbackId,\n            reason: wrapReason(reason)\n          });\n        });\n        return;\n      }\n\n      if (data.streamId) {\n        this._createStreamSink(data);\n\n        return;\n      }\n\n      action(data.data);\n    };\n\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n\n    ah[actionName] = handler;\n  }\n\n  send(actionName, data, transfers) {\n    this._postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = (0, _util.createPromiseCapability)();\n    this.callbackCapabilities[callbackId] = capability;\n\n    try {\n      this._postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n\n    return capability.promise;\n  }\n\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n\n        this._postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = (0, _util.createPromiseCapability)();\n          this.ready = this.sinkCapability.promise;\n        }\n\n        self._postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n\n      sinkCapability: (0, _util.createPromiseCapability)(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL:\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n\n        if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const {\n          onPull\n        } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n\n      case StreamKind.ENQUEUE:\n        (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n\n      case StreamKind.CLOSE:\n        (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.ERROR:\n        (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n        this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n        }\n\n        this._deleteStreamController(streamId);\n\n        break;\n\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n\n        const {\n          onCancel\n        } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async _deleteStreamController(streamId) {\n    await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n      return capability && capability.promise;\n    }));\n    delete this.streamControllers[streamId];\n  }\n\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n}\n\nexports.MessageHandler = MessageHandler;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Metadata = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _xml_parser = __w_pdfjs_require__(13);\n\nclass Metadata {\n  constructor(data) {\n    (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n    data = this._repair(data);\n    const parser = new _xml_parser.SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n      const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n        return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n      }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n        switch (name) {\n          case \"amp\":\n            return \"&\";\n\n          case \"apos\":\n            return \"'\";\n\n          case \"gt\":\n            return \">\";\n\n          case \"lt\":\n            return \"<\";\n\n          case \"quot\":\n            return '\"';\n        }\n\n        throw new Error(`_repair: ${name} isn't defined.`);\n      });\n      let chars = \"\";\n\n      for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n        const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n        if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n          chars += String.fromCharCode(code);\n        } else {\n          chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n        }\n      }\n\n      return \">\" + chars;\n    });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      rdf = rdf.firstChild;\n\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n\n}\n\nexports.Metadata = Metadata;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleXMLParser = void 0;\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n\n        case \"gt\":\n          return \">\";\n\n        case \"amp\":\n          return \"&\";\n\n        case \"quot\":\n          return '\"';\n      }\n\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n      ++pos;\n    }\n\n    const name = s.substring(start, pos);\n    skipWs();\n\n    while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n      skipWs();\n      let attrName = \"\",\n          attrValue = \"\";\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n\n      skipWs();\n\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n      if (attrEndIndex < 0) {\n        return null;\n      }\n\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue)\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n\n    return {\n      name,\n      attributes,\n      parsed: pos - start\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n      ++pos;\n    }\n\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n\n          case \"?\":\n            ++j;\n\n            const pi = this._parseProcessingInstruction(s, j);\n\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                  return;\n                }\n\n                complexDoctype = true;\n              }\n\n              const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n\n            break;\n\n          default:\n            const content = this._parseContent(s, j);\n\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n\n            let isClosed = false;\n\n            if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n              isClosed = true;\n            } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n    Object.defineProperty(this, \"parentNode\", {\n      value: null,\n      writable: true\n    });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n\n    if (!childNodes) {\n      return undefined;\n    }\n\n    const index = childNodes.indexOf(this);\n\n    if (index === -1) {\n      return undefined;\n    }\n\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n\n    return this.childNodes.map(function (child) {\n      return child.textContent;\n    }).join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined;\n    }\n\n    const [documentElement] = this._currentFragment;\n\n    if (!documentElement) {\n      return undefined;\n    }\n\n    return {\n      documentElement\n    };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n\n    const node = new SimpleDOMNode(\"#text\", text);\n\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n\n    this._currentFragment.push(node);\n\n    if (isEmpty) {\n      return;\n    }\n\n    this._stack.push(this._currentFragment);\n\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n    if (!lastElement) {\n      return;\n    }\n\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n\n}\n\nexports.SimpleXMLParser = SimpleXMLParser;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDataTransportStream = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    const initialData = params.initialData;\n\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n\n        rangeReader._enqueue(buffer);\n\n        return true;\n      });\n\n      (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      const firstReader = this._rangeReaders[0];\n\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({\n          loaded: evt.loaded,\n          total: evt.total\n        });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n    this._rangeReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeReaders.slice(0);\n\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n\n    this._pdfDataRangeTransport.abort();\n  }\n\n}\n\nexports.PDFDataTransportStream = PDFDataTransportStream;\n\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n\n    this._done = true;\n  }\n\n}\n\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    this._done = true;\n\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    this._stream._removeRangeReader(this);\n  }\n\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLContext = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nclass WebGLContext {\n  constructor({\n    enable = false\n  }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n\n    return (0, _util.shadow)(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({\n    layer,\n    mask,\n    properties\n  }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({\n    width,\n    height,\n    backgroundColor,\n    figures,\n    context\n  }) {\n    return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n\n}\n\nexports.WebGLContext = WebGLContext;\n\nvar WebGLUtils = function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n\n    return shader;\n  }\n\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n\n    return program;\n  }\n\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false\n    });\n  }\n\n  var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n  var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n        height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n\n    var cache = smaskCache,\n        canvas = cache.canvas,\n        gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n\n    gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.flush();\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n    return canvas;\n  }\n\n  var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n  var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n\n    var cache = figuresCache,\n        canvas = cache.canvas,\n        gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n    var count = 0;\n    var i, ii, rows;\n\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n        colorsMap = context.colors;\n    var pIndex = 0,\n        cIndex = 0;\n\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = ps.length / cols | 0;\n\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n\n          break;\n\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n\n          break;\n      }\n    }\n\n    if (backgroundColor) {\n      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n    gl.flush();\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n\n      return false;\n    },\n\n    composeSMask,\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n\n      smaskCache = null;\n      figuresCache = null;\n    }\n\n  };\n}();\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationLayer = void 0;\n\nvar _display_utils = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(2);\n\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case _util.AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case _util.AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case _util.AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n\n            return new PushButtonWidgetAnnotationElement(parameters);\n\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n\n        return new WidgetAnnotationElement(parameters);\n\n      case _util.AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case _util.AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case _util.AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case _util.AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case _util.AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case _util.AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case _util.AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case _util.AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case _util.AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case _util.AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case _util.AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n          page = this.page,\n          viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case _util.AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case _util.AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case _util.AnnotationBorderStyleType.BEVELED:\n          (0, _util.warn)(\"Unimplemented border style: beveled\");\n          break;\n\n        case _util.AnnotationBorderStyleType.INSET:\n          (0, _util.warn)(\"Unimplemented border style: inset\");\n          break;\n\n        case _util.AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n      } else {\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  _createPopup(container, trigger, data) {\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true\n    });\n    const popup = popupElement.render();\n    popup.style.left = container.style.width;\n    container.appendChild(popup);\n  }\n\n  render() {\n    (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    this.container.className = \"linkAnnotation\";\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      (0, _display_utils.addLinkAttributes)(link, {\n        url: data.url,\n        target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n\n      return false;\n    };\n\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n\n    link.className = \"internalLink\";\n  }\n\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({\n      type: this.data.name\n    });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    return this.container;\n  }\n\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    this.container.className = \"textWidgetAnnotation\";\n    let element = null;\n\n    if (this.renderInteractiveForms) {\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n      let font = null;\n\n      if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  _setTextStyle(element, font) {\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  render() {\n    const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents\n    });\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    const color = this.color;\n\n    if (color) {\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString()\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n\n    popup.appendChild(contents);\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n\n    return p;\n  }\n\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n    let points = [];\n\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n\n    points = points.join(\" \");\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      let points = [];\n\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable, true);\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, true);\n    const {\n      filename,\n      content\n    } = this.data.file;\n    this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: (0, _util.stringToPDFString)(filename),\n        filename,\n        content\n      });\n    }\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  _download() {\n    if (!this.downloadManager) {\n      (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n\n}\n\nclass AnnotationLayer {\n  static render(parameters) {\n    const sortedAnnotations = [],\n          popupAnnotations = [];\n\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n\n      if (data.annotationType === _util.AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n\n      sortedAnnotations.push(data);\n    }\n\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new _display_utils.DOMSVGFactory()\n      });\n\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      }\n    }\n\n    parameters.div.removeAttribute(\"hidden\");\n  }\n\n}\n\nexports.AnnotationLayer = AnnotationLayer;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderTextLayer = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar renderTextLayer = function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1\n    };\n\n    task._textDivs.push(textDiv);\n\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n\n      task._textDivProperties.set(textDiv, textDivProperties);\n\n      return;\n    }\n\n    var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n    textDiv.textContent = geom.str;\n\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n\n    let shouldScaleText = false;\n\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n            absScaleY = Math.abs(geom.transform[3]);\n\n      if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n        shouldScaleText = true;\n      }\n    }\n\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n\n    task._textDivProperties.set(textDiv, textDivProperties);\n\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n          angleSin = 0;\n\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n\n      var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n      var m, b;\n\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n\n      var divProperties = task._textDivProperties.get(div);\n\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n        task._textDivProperties.set(div, divProperties);\n\n        continue;\n      }\n\n      var e = expanded[i],\n          b = bounds[i];\n      var m = b.m,\n          c = m[0],\n          s = m[1];\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = _util.Util.applyTransform(p, m);\n\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0\n      };\n    });\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n          b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0\n    };\n    var horizon = [{\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary\n    }];\n    bounds.forEach(function (boundary) {\n      var i = 0;\n\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n\n      var j = horizon.length - 1;\n\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n          k,\n          maxXNew = -Infinity;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n\n        if (affectedBoundary.x2 > boundary.x1) {\n          xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          xNew = affectedBoundary.x2New;\n        }\n\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      boundary.x1New = maxXNew;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New === undefined) {\n          if (affectedBoundary.x2 > boundary.x1) {\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      var changedHorizon = [],\n          lastBoundary = null;\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n        if (lastBoundary === useBoundary) {\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary\n        });\n      }\n\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary\n        });\n      }\n\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n\n        var used = false;\n\n        for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n\n        for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n    });\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = (0, _util.createPromiseCapability)();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    this._capability.promise.finally(() => {\n      if (this._layoutTextCtx) {\n        this._layoutTextCtx.canvas.width = 0;\n        this._layoutTextCtx.canvas.height = 0;\n        this._layoutTextCtx = null;\n      }\n    }).catch(() => {});\n  }\n\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n\n      if (this._reader) {\n        this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n        this._reader = null;\n      }\n\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n\n      if (textDivProperties.canvasWidth !== 0) {\n        const {\n          fontSize,\n          fontFamily\n        } = textDiv.style;\n\n        if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n\n        const {\n          width\n        } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n\n        textDiv.style.transform = transform;\n      }\n\n      this._textDivProperties.set(textDiv, textDivProperties);\n\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = (0, _util.createPromiseCapability)();\n      let styleCache = Object.create(null);\n      const canvas = document.createElement(\"canvas\");\n      canvas.mozOpaque = true;\n      this._layoutTextCtx = canvas.getContext(\"2d\", {\n        alpha: false\n      });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n\n        this._processItems(textItems, textStyles);\n\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({\n            value,\n            done\n          }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n\n            this._processItems(value.items, styleCache);\n\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n\n        if (!timeout) {\n          render(this);\n        } else {\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n\n      const transformBuf = [],\n            paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    }\n  };\n\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection\n    });\n\n    task._render(renderParameters.timeout);\n\n    return task;\n  }\n\n  return renderTextLayer;\n}();\n\nexports.renderTextLayer = renderTextLayer;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _display_utils = __w_pdfjs_require__(1);\n\nvar _is_node = __w_pdfjs_require__(4);\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nexports.SVGGraphics = SVGGraphics;\n{\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\"\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = function () {\n    const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n    const CHUNK_WRAPPER_SIZE = 12;\n    const crcTable = new Int32Array(256);\n\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n        } else {\n          c = c >> 1 & 0x7fffffff;\n        }\n      }\n\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = crc >>> 8 ^ b;\n      }\n\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n      data[p] = len >> 24 & 0xff;\n      data[p + 1] = len >> 16 & 0xff;\n      data[p + 2] = len >> 8 & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n      data.set(body, p);\n      p += body.length;\n      const crc = crc32(data, offset + 4, p);\n      data[p] = crc >> 24 & 0xff;\n      data[p + 1] = crc >> 16 & 0xff;\n      data[p + 2] = crc >> 8 & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n\n      return b << 16 | a;\n    }\n\n    function deflateSync(literals) {\n      if (!_is_node.isNodeJS) {\n        return deflateSyncUncompressed(literals);\n      }\n\n      try {\n        let input;\n\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          input = Buffer.from(literals);\n        }\n\n        const output = require(\"zlib\").deflateSync(input, {\n          level: 9\n        });\n\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78;\n      idat[pi++] = 0x9c;\n      let pos = 0;\n\n      while (len > maxBlockLength) {\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = len >> 8 & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n      const adler = adler32(literals, 0, literals.length);\n      idat[pi++] = adler >> 24 & 0xff;\n      idat[pi++] = adler >> 16 & 0xff;\n      idat[pi++] = adler >> 8 & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case _util.ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = width + 7 >> 3;\n          break;\n\n        case _util.ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n\n        case _util.ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n          offsetBytes = 0;\n\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0;\n        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n        offsetLiterals = 0;\n\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++;\n\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n      const idat = deflateSync(literals);\n      const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n      return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  }();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n      this.dashArray = [];\n      this.dashPhase = 0;\n      this.dependencies = [];\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n  }\n\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({\n          fnId: 92,\n          fn: \"group\",\n          items: []\n        });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n\n    return opTree;\n  }\n\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    do {\n      i--;\n    } while (s[i] === \"0\");\n\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = Math.acos(m[0]) * 180 / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n\n    return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n  }\n\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n  exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new _display_utils.DOMSVGFactory();\n      this.current = new SVGExtraState();\n      this.transformMatrix = _util.IDENTITY_MATRIX;\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n      this._operatorIdMapping = [];\n\n      for (const op in _util.OPS) {\n        this._operatorIdMapping[_util.OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== _util.OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i]\n        });\n      }\n\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case _util.OPS.beginText:\n            this.beginText();\n            break;\n\n          case _util.OPS.dependency:\n            break;\n\n          case _util.OPS.setLeading:\n            this.setLeading(args);\n            break;\n\n          case _util.OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setFont:\n            this.setFont(args);\n            break;\n\n          case _util.OPS.showText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.endText:\n            this.endText();\n            break;\n\n          case _util.OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n\n          case _util.OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n\n          case _util.OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n\n          case _util.OPS.setTextMatrix:\n            this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n\n          case _util.OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n\n          case _util.OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n\n          case _util.OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n\n          case _util.OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n\n          case _util.OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n\n          case _util.OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n\n          case _util.OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n\n          case _util.OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n\n          case _util.OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n\n          case _util.OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n\n          case _util.OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n\n          case _util.OPS.setGState:\n            this.setGState(args[0]);\n            break;\n\n          case _util.OPS.fill:\n            this.fill();\n            break;\n\n          case _util.OPS.eoFill:\n            this.eoFill();\n            break;\n\n          case _util.OPS.stroke:\n            this.stroke();\n            break;\n\n          case _util.OPS.fillStroke:\n            this.fillStroke();\n            break;\n\n          case _util.OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n\n          case _util.OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n\n          case _util.OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n\n          case _util.OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n\n          case _util.OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n\n          case _util.OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n\n          case _util.OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n\n          case _util.OPS.closePath:\n            this.closePath();\n            break;\n\n          case _util.OPS.closeStroke:\n            this.closeStroke();\n            break;\n\n          case _util.OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n\n          case _util.OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n\n          case _util.OPS.nextLine:\n            this.nextLine();\n            break;\n\n          case _util.OPS.transform:\n            this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n\n          case _util.OPS.endPath:\n            this.endPath();\n            break;\n\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = _util.IDENTITY_MATRIX;\n      current.lineMatrix = _util.IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n      let x = 0;\n\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if ((0, _util.isNum)(glyph)) {\n          x += spacingDir * glyph * fontSize / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n\n          current.tspan.textContent += character;\n        } else {}\n\n        let charWidth;\n\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n\n      current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n      if (vertical) {\n        current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      let textMatrix = current.textMatrix;\n\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n      }\n\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n      this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n      let bold = \"normal\";\n\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n\n      if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n\n      const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n      const bl = _util.Util.applyTransform([0, 0], inv);\n\n      const br = _util.Util.applyTransform([0, height], inv);\n\n      const ul = _util.Util.applyTransform([width, 0], inv);\n\n      const ur = _util.Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n\n      return this._makeShadingPattern(args);\n    }\n\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || _util.IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n      const tilingId = `shading${shadingCount++}`;\n\n      const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n      const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n      const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n\n      if (paintType === 2) {\n        const cssColor = _util.Util.makeCssRgb(...color);\n\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n\n      this.executeOpTree(this.convertOpList(operatorList));\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n\n        case \"Mesh\":\n          (0, _util.warn)(\"Unimplemented pattern Mesh\");\n          return null;\n\n        case \"Dummy\":\n          return \"hotpink\";\n\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n          y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case _util.OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n            break;\n\n          case _util.OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n            j += 6;\n            break;\n\n          case _util.OPS.curveTo2:\n            d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n\n          case _util.OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n            j += 4;\n            break;\n\n          case _util.OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      const clipElement = current.element.cloneNode(true);\n\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n\n      current.activeClipUrl = `url(#${clipId})`;\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {}\n\n    setFlatness(flatness) {}\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n\n          case \"Font\":\n            this.setFont(value);\n            break;\n\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n      element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n      element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fill();\n    }\n\n    fillStroke() {\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n      this.defs.appendChild(mask);\n\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n      this.svg = rootGroup;\n      return svg;\n    }\n\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n\n      return this.current.clipGroup;\n    }\n\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n\n      return this.tgrp;\n    }\n\n  };\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFNodeStream = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\n;\n\nconst fs = require(\"fs\");\n\nconst http = require(\"http\");\n\nconst https = require(\"https\");\n\nconst url = require(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n    this._rangeRequestReaders.push(rangeReader);\n\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFNodeStream = PDFNodeStream;\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._headersCapability = (0, _util.createPromiseCapability)();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new _util.AbortException(\"streaming is disabled\"));\n    }\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._headersCapability.resolve();\n\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n\n      this._headersCapability.reject(reason);\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    this._httpHeaders = {};\n\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      this._httpHeaders[property] = value;\n    }\n\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n\n      this._headersCapability.resolve();\n    });\n  }\n\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, {\n      start,\n      end: end - 1\n    }));\n  }\n\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResponseStatusError = createResponseStatusError;\nexports.extractFilenameFromHeader = extractFilenameFromHeader;\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\nexports.validateResponseStatus = validateResponseStatus;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _content_disposition = __w_pdfjs_require__(21);\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n  if (contentDisposition) {\n    let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n    return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n\n  return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  tmp = rfc2231getparam(contentDisposition);\n\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        if (/^utf-?8$/i.test(encoding)) {\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n\n    return value;\n  }\n\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n\n    return value;\n  }\n\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n\n        continue;\n      }\n\n      matches[n] = [quot, part];\n    }\n\n    const parts = [];\n\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n\n      if (quot) {\n        part = unescape(part);\n\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n\n      parts.push(part);\n    }\n\n    return parts.join(\"\");\n  }\n\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n\n      value = parts.join('\"');\n    }\n\n    return value;\n  }\n\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n\n    if (encodingend === -1) {\n      return extvalue;\n    }\n\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n\n    return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replace(/_/g, \" \");\n        text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n\n      try {\n        text = atob(text);\n      } catch (e) {}\n\n      return textdecode(charset, text);\n    });\n  }\n\n  return \"\";\n}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFNetworkStream = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\n;\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n\n  if (typeof data !== \"string\") {\n    return data;\n  }\n\n  const array = (0, _util.stringToBytes)(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || {};\n    this.withCredentials = args.withCredentials || false;\n\n    this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n      return new XMLHttpRequest();\n    };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end\n    };\n\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      xhr.setRequestHeader(property, value);\n    }\n\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n\n      return;\n    }\n\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n\n}\n\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFNetworkStream = PDFNetworkStream;\n\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = (0, _network_utils.validateRangeRequestCapabilities)({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: args.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n\n    this._done = true;\n\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = (0, _network_utils.createResponseStatusError)(status, url);\n    this._storedError = exception;\n\n    this._headersReceivedCapability.reject(exception);\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._headersReceivedCapability.reject(reason);\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n\n    this._fullRequestReader = null;\n  }\n\n}\n\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    });\n\n    this._requests = [];\n\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n\n    this._close();\n  }\n\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFetchStream = void 0;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _network_utils = __w_pdfjs_require__(20);\n\n;\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n\n    headers.append(property, value);\n  }\n\n  return headers;\n}\n\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n\n}\n\nexports.PDFFetchStream = PDFFetchStream;\n\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._headers = createHeaders(this._stream.httpHeaders);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._reader = response.body.getReader();\n\n      this._headersCapability.resolve();\n\n      const getResponseHeader = name => {\n        return response.headers.get(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._readCapability.resolve();\n\n      this._reader = response.body.getReader();\n    });\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.js.map","global.pdfjsLib = require('pdfjs-dist');\nglobal.pdfjsLibUtils = require('pdfjs-dist/web/pdf_viewer.js');\n\nPdfPreview.initCanvas();\n","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/web/pdf_viewer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/web/pdf_viewer\"] = root.pdfjsViewer = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__w_pdfjs_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__w_pdfjs_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__w_pdfjs_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnnotationLayerBuilder\", {\n  enumerable: true,\n  get: function () {\n    return _annotation_layer_builder.AnnotationLayerBuilder;\n  }\n});\nObject.defineProperty(exports, \"DefaultAnnotationLayerFactory\", {\n  enumerable: true,\n  get: function () {\n    return _annotation_layer_builder.DefaultAnnotationLayerFactory;\n  }\n});\nObject.defineProperty(exports, \"DefaultTextLayerFactory\", {\n  enumerable: true,\n  get: function () {\n    return _text_layer_builder.DefaultTextLayerFactory;\n  }\n});\nObject.defineProperty(exports, \"TextLayerBuilder\", {\n  enumerable: true,\n  get: function () {\n    return _text_layer_builder.TextLayerBuilder;\n  }\n});\nObject.defineProperty(exports, \"EventBus\", {\n  enumerable: true,\n  get: function () {\n    return _ui_utils.EventBus;\n  }\n});\nObject.defineProperty(exports, \"NullL10n\", {\n  enumerable: true,\n  get: function () {\n    return _ui_utils.NullL10n;\n  }\n});\nObject.defineProperty(exports, \"ProgressBar\", {\n  enumerable: true,\n  get: function () {\n    return _ui_utils.ProgressBar;\n  }\n});\nObject.defineProperty(exports, \"PDFLinkService\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_link_service.PDFLinkService;\n  }\n});\nObject.defineProperty(exports, \"SimpleLinkService\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_link_service.SimpleLinkService;\n  }\n});\nObject.defineProperty(exports, \"DownloadManager\", {\n  enumerable: true,\n  get: function () {\n    return _download_manager.DownloadManager;\n  }\n});\nObject.defineProperty(exports, \"GenericL10n\", {\n  enumerable: true,\n  get: function () {\n    return _genericl10n.GenericL10n;\n  }\n});\nObject.defineProperty(exports, \"PDFFindController\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_find_controller.PDFFindController;\n  }\n});\nObject.defineProperty(exports, \"PDFHistory\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_history.PDFHistory;\n  }\n});\nObject.defineProperty(exports, \"PDFPageView\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_page_view.PDFPageView;\n  }\n});\nObject.defineProperty(exports, \"PDFSinglePageViewer\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_single_page_viewer.PDFSinglePageViewer;\n  }\n});\nObject.defineProperty(exports, \"PDFViewer\", {\n  enumerable: true,\n  get: function () {\n    return _pdf_viewer.PDFViewer;\n  }\n});\n\nvar _annotation_layer_builder = __w_pdfjs_require__(1);\n\nvar _text_layer_builder = __w_pdfjs_require__(5);\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nvar _pdf_link_service = __w_pdfjs_require__(4);\n\nvar _download_manager = __w_pdfjs_require__(6);\n\nvar _genericl10n = __w_pdfjs_require__(8);\n\nvar _pdf_find_controller = __w_pdfjs_require__(10);\n\nvar _pdf_history = __w_pdfjs_require__(12);\n\nvar _pdf_page_view = __w_pdfjs_require__(13);\n\nvar _pdf_single_page_viewer = __w_pdfjs_require__(15);\n\nvar _pdf_viewer = __w_pdfjs_require__(17);\n\nconst pdfjsVersion = '2.5.207';\nconst pdfjsBuild = '0974d605';\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = void 0;\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nvar _pdf_link_service = __w_pdfjs_require__(4);\n\nclass AnnotationLayerBuilder {\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  render(viewport, intent = \"display\") {\n    this.pdfPage.getAnnotations({\n      intent\n    }).then(annotations => {\n      if (this._cancelled) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({\n          dontFlip: true\n        }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager\n      };\n\n      if (this.div) {\n        _pdfjsLib.AnnotationLayer.update(parameters);\n      } else {\n        if (annotations.length === 0) {\n          return;\n        }\n\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        _pdfjsLib.AnnotationLayer.render(parameters);\n\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n\n}\n\nexports.AnnotationLayerBuilder = AnnotationLayerBuilder;\n\nclass DefaultAnnotationLayerFactory {\n  createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new _pdf_link_service.SimpleLinkService(),\n      l10n\n    });\n  }\n\n}\n\nexports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nlet pdfjsLib;\n\nif (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n  pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n} else {\n  pdfjsLib = require(\"../build/pdf.js\");\n}\n\nmodule.exports = pdfjsLib;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidRotation = isValidRotation;\nexports.isValidScrollMode = isValidScrollMode;\nexports.isValidSpreadMode = isValidSpreadMode;\nexports.isPortraitOrientation = isPortraitOrientation;\nexports.clamp = clamp;\nexports.getPDFFileNameFromURL = getPDFFileNameFromURL;\nexports.noContextMenuHandler = noContextMenuHandler;\nexports.parseQueryString = parseQueryString;\nexports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements;\nexports.getVisibleElements = getVisibleElements;\nexports.roundToDivide = roundToDivide;\nexports.getPageSizeInches = getPageSizeInches;\nexports.approximateFraction = approximateFraction;\nexports.getOutputScale = getOutputScale;\nexports.scrollIntoView = scrollIntoView;\nexports.watchScroll = watchScroll;\nexports.binarySearchFirstItem = binarySearchFirstItem;\nexports.normalizeWheelEventDelta = normalizeWheelEventDelta;\nexports.waitOnEventOrTimeout = waitOnEventOrTimeout;\nexports.moveToEndOfArray = moveToEndOfArray;\nexports.WaitOnType = exports.animationStarted = exports.ProgressBar = exports.EventBus = exports.NullL10n = exports.SpreadMode = exports.ScrollMode = exports.TextLayerMode = exports.RendererType = exports.PresentationModeState = exports.VERTICAL_PADDING = exports.SCROLLBAR_PADDING = exports.MAX_AUTO_SCALE = exports.UNKNOWN_SCALE = exports.MAX_SCALE = exports.MIN_SCALE = exports.DEFAULT_SCALE = exports.DEFAULT_SCALE_VALUE = exports.CSS_UNITS = exports.AutoPrintRegExp = void 0;\nconst CSS_UNITS = 96.0 / 72.0;\nexports.CSS_UNITS = CSS_UNITS;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nexports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\nconst DEFAULT_SCALE = 1.0;\nexports.DEFAULT_SCALE = DEFAULT_SCALE;\nconst MIN_SCALE = 0.1;\nexports.MIN_SCALE = MIN_SCALE;\nconst MAX_SCALE = 10.0;\nexports.MAX_SCALE = MAX_SCALE;\nconst UNKNOWN_SCALE = 0;\nexports.UNKNOWN_SCALE = UNKNOWN_SCALE;\nconst MAX_AUTO_SCALE = 1.25;\nexports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\nconst SCROLLBAR_PADDING = 40;\nexports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\nconst VERTICAL_PADDING = 5;\nexports.VERTICAL_PADDING = VERTICAL_PADDING;\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nexports.PresentationModeState = PresentationModeState;\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\"\n};\nexports.RendererType = RendererType;\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2\n};\nexports.TextLayerMode = TextLayerMode;\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n  WRAPPED: 2\n};\nexports.ScrollMode = ScrollMode;\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0,\n  ODD: 1,\n  EVEN: 2\n};\nexports.SpreadMode = SpreadMode;\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\nexports.AutoPrintRegExp = AutoPrintRegExp;\n\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {}\n\n};\nexports.NullL10n = NullL10n;\n\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1\n  };\n}\n\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  let parent = element.offsetParent;\n\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n\n  while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || skipOverflowHiddenElements && getComputedStyle(parent).overflow === \"hidden\") {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n\n    if (!parent) {\n      return;\n    }\n  }\n\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n\n  parent.scrollTop = offsetY;\n}\n\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n\n  return params;\n}\n\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = minIndex + maxIndex >> 1;\n    const currentItem = items[currentIndex];\n\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n\n  return minIndex;\n}\n\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n\n  const xinv = 1 / x;\n  const limit = 8;\n\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  let a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n\n  while (true) {\n    const p = a + c,\n          q = b + d;\n\n    if (q > limit) {\n      break;\n    }\n\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n\n  let result;\n\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\nfunction getPageSizeInches({\n  view,\n  userUnit,\n  rotate\n}) {\n  const [x1, y1, x2, y2] = view;\n  const changeOrientation = rotate % 180 !== 0;\n  const width = (x2 - x1) / 72 * userUnit;\n  const height = (y2 - y1) / 72 * userUnit;\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height\n  };\n}\n\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  if (index < 2) {\n    return index;\n  }\n\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      break;\n    }\n\n    index = i;\n  }\n\n  return index;\n}\n\nfunction getVisibleElements(scrollEl, views, sortByVisibility = false, horizontal = false) {\n  const top = scrollEl.scrollTop,\n        bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n        right = left + scrollEl.clientWidth;\n\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n\n  function isElementRightAfterViewLeft(view) {\n    const element = view.div;\n    const elementRight = element.offsetLeft + element.clientLeft + element.clientWidth;\n    return elementRight > left;\n  }\n\n  const visible = [],\n        numViews = views.length;\n  let firstVisibleElementInd = numViews === 0 ? 0 : binarySearchFirstItem(views, horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop);\n\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n  }\n\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n          element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n          viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n      continue;\n    }\n\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const percent = (viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100 / viewHeight / viewWidth | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent\n    });\n  }\n\n  const first = visible[0],\n        last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n\n      return a.id - b.id;\n    });\n  }\n\n  return {\n    first,\n    last,\n    views: visible\n  };\n}\n\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n\n  if (isDataSchema(url)) {\n    console.warn(\"getPDFFileNameFromURL: \" + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n}\n\nfunction isValidSpreadMode(mode) {\n  return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\"\n};\nexports.WaitOnType = WaitOnType;\n\nfunction waitOnEventOrTimeout({\n  target,\n  name,\n  delay = 0\n}) {\n  return new Promise(function (resolve, reject) {\n    if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\nconst animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nexports.animationStarted = animationStarted;\n\nfunction dispatchDOMEvent(eventName, args = null) {\n  throw new Error(\"Not implemented: dispatchDOMEvent\");\n}\n\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n  }\n\n  on(eventName, listener) {\n    this._on(eventName, listener, {\n      external: true\n    });\n  }\n\n  off(eventName, listener) {\n    this._off(eventName, listener, {\n      external: true\n    });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    eventListeners.slice(0).forEach(function ({\n      listener,\n      external\n    }) {\n      if (external) {\n        if (!externalListeners) {\n          externalListeners = [];\n        }\n\n        externalListeners.push(listener);\n        return;\n      }\n\n      listener.apply(null, args);\n    });\n\n    if (externalListeners) {\n      externalListeners.forEach(function (listener) {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n  }\n\n  _on(eventName, listener, options = null) {\n    let eventListeners = this._listeners[eventName];\n\n    if (!eventListeners) {\n      this._listeners[eventName] = eventListeners = [];\n    }\n\n    eventListeners.push({\n      listener,\n      external: (options && options.external) === true\n    });\n  }\n\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners) {\n      return;\n    }\n\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n}\n\nexports.EventBus = EventBus;\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, {\n    height,\n    width,\n    units\n  } = {}) {\n    this.visible = true;\n    this.div = document.querySelector(id + \" .progress\");\n    this.bar = this.div.parentNode;\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = this.width * this._percent / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n\n    if (scrollbarWidth > 0) {\n      this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    this.visible = true;\n    document.body.classList.add(\"loadingInProgress\");\n    this.bar.classList.remove(\"hidden\");\n  }\n\n}\n\nexports.ProgressBar = ProgressBar;\n\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n        len = arr.length;\n  let write = 0;\n\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleLinkService = exports.PDFLinkService = void 0;\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nclass PDFLinkService {\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  navigateTo(dest) {\n    const goToDestination = ({\n      namedDest,\n      explicitDest\n    }) => {\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\n            this.cachePageRef(pageIndex + 1, destRef);\n            goToDestination({\n              namedDest,\n              explicitDest\n            });\n          }).catch(() => {\n            console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${dest}\".`);\n          });\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${dest}\".`);\n        return;\n      }\n\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(`PDFLinkService.navigateTo: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${dest}\".`);\n        return;\n      }\n\n      if (this.pdfHistory) {\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({\n          namedDest,\n          explicitDest,\n          pageNumber\n        });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n        ignoreDestinationZoom: this._ignoreDestinationZoom\n      });\n    };\n\n    new Promise((resolve, reject) => {\n      if (typeof dest === \"string\") {\n        this.pdfDocument.getDestination(dest).then(destArray => {\n          resolve({\n            namedDest: dest,\n            explicitDest: destArray\n          });\n        });\n        return;\n      }\n\n      resolve({\n        namedDest: \"\",\n        explicitDest: dest\n      });\n    }).then(data => {\n      if (!Array.isArray(data.explicitDest)) {\n        console.error(`PDFLinkService.navigateTo: \"${data.explicitDest}\" is` + ` not a valid destination array, for dest=\"${dest}\".`);\n        return;\n      }\n\n      goToDestination(data);\n    });\n  }\n\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      return this.getAnchorUrl(\"#\" + escape(dest));\n    }\n\n    if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      return this.getAnchorUrl(\"#\" + escape(str));\n    }\n\n    return this.getAnchorUrl(\"\");\n  }\n\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  setHash(hash) {\n    let pageNumber, dest;\n\n    if (hash.includes(\"=\")) {\n      const params = (0, _ui_utils.parseQueryString)(hash);\n\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\"\n        });\n      }\n\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n\n      if (\"zoom\" in params) {\n        const zoomArgs = params.zoom.split(\",\");\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          dest = [null, {\n            name: \"XYZ\"\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, {\n              name: zoomArg\n            }];\n          } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\n            dest = [null, {\n              name: zoomArg\n            }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n            } else {\n              dest = [null, {\n                name: zoomArg\n              }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n            }\n          } else {\n            console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\n          }\n        }\n      }\n\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber;\n      }\n\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode\n        });\n      }\n\n      if (\"nameddest\" in params) {\n        this.navigateTo(params.nameddest);\n      }\n    } else {\n      dest = unescape(hash);\n\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.navigateTo(dest);\n        return;\n      }\n\n      console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\n    }\n  }\n\n  executeNamedAction(action) {\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n\n        break;\n\n      case \"NextPage\":\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n\n        break;\n\n      case \"PrevPage\":\n        if (this.page > 1) {\n          this.page--;\n        }\n\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break;\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action\n    });\n  }\n\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n  }\n\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n}\n\nexports.PDFLinkService = PDFLinkService;\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n\n  const destLength = dest.length;\n\n  if (destLength < 2) {\n    return false;\n  }\n\n  const page = dest[0];\n\n  if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\n    return false;\n  }\n\n  const zoom = dest[1];\n\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n\n  let allowNull = true;\n\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n\n      break;\n\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n\n      break;\n\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n\n      allowNull = false;\n      break;\n\n    default:\n      return false;\n  }\n\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n\n    if (!(typeof param === \"number\" || allowNull && param === null)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  get pagesCount() {\n    return 0;\n  }\n\n  get page() {\n    return 0;\n  }\n\n  set page(value) {}\n\n  get rotation() {\n    return 0;\n  }\n\n  set rotation(value) {}\n\n  navigateTo(dest) {}\n\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  setHash(hash) {}\n\n  executeNamedAction(action) {}\n\n  cachePageRef(pageNum, pageRef) {}\n\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n}\n\nexports.SimpleLinkService = SimpleLinkService;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTextLayerFactory = exports.TextLayerBuilder = void 0;\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nconst EXPAND_DIVS_TIMEOUT = 300;\n\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n    this._onUpdateTextLayerMatches = null;\n\n    this._bindMouse();\n  }\n\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length\n    });\n  }\n\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n\n    this.cancel();\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection\n    });\n    this.textLayerRenderTask.promise.then(() => {\n      this.textLayerDiv.appendChild(textLayerFrag);\n\n      this._finishRendering();\n\n      this._updateMatches();\n    }, function (reason) {});\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n\n      this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n    }\n  }\n\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    if (!matches) {\n      return [];\n    }\n\n    const {\n      findController,\n      textContentItemsStr\n    } = this;\n    let i = 0,\n        iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      let matchIdx = matches[m];\n\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        }\n      };\n\n      if (matchesLength) {\n        matchIdx += matchesLength[m];\n      } else {\n        matchIdx += queryLen;\n      }\n\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex\n      };\n      result.push(match);\n    }\n\n    return result;\n  }\n\n  _renderMatches(matches) {\n    if (matches.length === 0) {\n      return;\n    }\n\n    const {\n      findController,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n      const node = document.createTextNode(content);\n\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n        i1 = i0 + 1;\n\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx\n        });\n      }\n\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\n      } else {\n        appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\n\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    if (!this.renderingDone) {\n      return;\n    }\n\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n\n    this._renderMatches(this.matches);\n  }\n\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n\n        if (expandDivsTimer) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      let adjustTop = evt.target !== div;\n      adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\n\n      if (adjustTop) {\n        const divBounds = div.getBoundingClientRect();\n        const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n        end.style.top = (r * 100).toFixed(2) + \"%\";\n      }\n\n      end.classList.add(\"active\");\n    });\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        expandDivsTimer = setTimeout(() => {\n          if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.expandTextDivs(false);\n          }\n\n          expandDivsTimer = null;\n        }, EXPAND_DIVS_TIMEOUT);\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      end.style.top = \"\";\n      end.classList.remove(\"active\");\n    });\n  }\n\n}\n\nexports.TextLayerBuilder = TextLayerBuilder;\n\nclass DefaultTextLayerFactory {\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus\n    });\n  }\n\n}\n\nexports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DownloadManager = void 0;\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nvar _viewer_compatibility = __w_pdfjs_require__(7);\n\n;\nconst DISABLE_CREATE_OBJECT_URL = _viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL || false;\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n\n  a.href = blobUrl;\n  a.target = \"_parent\";\n\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  constructor({\n    disableCreateObjectURL = DISABLE_CREATE_OBJECT_URL\n  }) {\n    this.disableCreateObjectURL = disableCreateObjectURL;\n  }\n\n  downloadUrl(url, filename) {\n    if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) {\n      return;\n    }\n\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    if (navigator.msSaveBlob) {\n      navigator.msSaveBlob(new Blob([data], {\n        type: contentType\n      }), filename);\n      return;\n    }\n\n    const blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, this.disableCreateObjectURL);\n    download(blobUrl, filename);\n  }\n\n  download(blob, url, filename) {\n    if (navigator.msSaveBlob) {\n      if (!navigator.msSaveBlob(blob, filename)) {\n        this.downloadUrl(url, filename);\n      }\n\n      return;\n    }\n\n    if (this.disableCreateObjectURL) {\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n\n}\n\nexports.DownloadManager = DownloadManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewerCompatibilityParams = void 0;\nconst compatibilityParams = Object.create(null);\n{\n  const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n  const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\n  const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\n  const isAndroid = /Android/.test(userAgent);\n  const isIE = /Trident/.test(userAgent);\n  const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\nexports.viewerCompatibilityParams = viewerCompatibilityParams;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenericL10n = void 0;\n\n__w_pdfjs_require__(9);\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n\n}\n\nexports.GenericL10n = GenericL10n;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\ndocument.webL10n = function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n  var gAsyncResourceLoading = true;\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element) return {};\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n\n    return {\n      id: l10nId,\n      args: args\n    };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0) return text;\n      return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n    }\n\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n\n            var line = entries.shift();\n            if (reComment.test(line)) continue;\n\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n\n              if (match) {\n                currentLang = match[1].toLowerCase();\n                skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n\n              match = reImport.exec(line);\n\n              if (match) {\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            var tmp = line.match(reSplit);\n\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n\n        nextEntry();\n      }\n\n      function loadImport(url, callback) {\n        xhrLoadText(url, function (content) {\n          parseRawLines(content, false, callback);\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    xhrLoadText(href, function (response) {\n      gTextData += response;\n      parseProperties(response, function (data) {\n        for (var key in data) {\n          var id,\n              prop,\n              index = key.lastIndexOf('.');\n\n          if (index > 0) {\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else {\n            id = key;\n            prop = gTextProp;\n          }\n\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n\n          gL10nData[id][prop] = data[key];\n        }\n\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  function loadLocale(lang, callback) {\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n\n    if (langCount === 0) {\n      var dict = getL10nDictionary();\n\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n\n      gReadyState = 'complete';\n      return;\n    }\n\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n\n    onResourceLoaded = function () {\n      gResourceCount++;\n\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    function L10nResourceLink(link) {\n      var href = link.href;\n\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          console.warn(href + ' not found.');\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n  }\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    var pluralRules = {\n      '0': function (n) {\n        return 'other';\n      },\n      '1': function (n) {\n        if (isBetween(n % 100, 3, 10)) return 'few';\n        if (n === 0) return 'zero';\n        if (isBetween(n % 100, 11, 99)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '2': function (n) {\n        if (n !== 0 && n % 10 === 0) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '3': function (n) {\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '4': function (n) {\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '5': function (n) {\n        if (isBetween(n, 0, 2) && n != 2) return 'one';\n        return 'other';\n      },\n      '6': function (n) {\n        if (n === 0) return 'zero';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '7': function (n) {\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '8': function (n) {\n        if (isBetween(n, 3, 6)) return 'few';\n        if (isBetween(n, 7, 10)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '9': function (n) {\n        if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '10': function (n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n        return 'other';\n      },\n      '11': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '12': function (n) {\n        if (isBetween(n, 2, 4)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '13': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '14': function (n) {\n        if (isBetween(n % 100, 3, 4)) return 'few';\n        if (n % 100 == 2) return 'two';\n        if (n % 100 == 1) return 'one';\n        return 'other';\n      },\n      '15': function (n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n        if (isBetween(n % 100, 11, 19)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '16': function (n) {\n        if (n % 10 == 1 && n != 11) return 'one';\n        return 'other';\n      },\n      '17': function (n) {\n        if (n == 3) return 'few';\n        if (n === 0) return 'zero';\n        if (n == 6) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '18': function (n) {\n        if (n === 0) return 'zero';\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n        return 'other';\n      },\n      '19': function (n) {\n        if (isBetween(n, 2, 10)) return 'few';\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '20': function (n) {\n        if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n        if (n % 1000000 === 0 && n !== 0) return 'many';\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n        return 'other';\n      },\n      '21': function (n) {\n        if (n === 0) return 'zero';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '22': function (n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n        return 'other';\n      },\n      '23': function (n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n        return 'other';\n      },\n      '24': function (n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n        if (isIn(n, [2, 12])) return 'two';\n        if (isIn(n, [1, 11])) return 'one';\n        return 'other';\n      }\n    };\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function () {\n        return 'other';\n      };\n    }\n\n    return pluralRules[index];\n  }\n\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n    if (prop != gTextProp) return str;\n\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    if (n === 0 && key + '[zero]' in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && key + '[one]' in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && key + '[two]' in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + '[other]' in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n\n      if (!fallback) {\n        return null;\n      }\n\n      data = fallback;\n    }\n\n    var rv = {};\n\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n\n    return rv;\n  }\n\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n\n    return str;\n  }\n\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n    var data = getL10nData(l10n.id, l10n.args);\n\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    if (data[gTextProp]) {\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        var children = element.childNodes;\n        var found = false;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n\n    var count = 0;\n\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n\n    return count;\n  }\n\n  function translateFragment(element) {\n    element = element || document.documentElement;\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    translateElement(element);\n  }\n\n  return {\n    get: function (key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n\n      if (index > 0) {\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n\n      var fallback;\n\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n\n      var data = getL10nData(key, args, fallback);\n\n      if (data && prop in data) {\n        return data[prop];\n      }\n\n      return '{{' + key + '}}';\n    },\n    getData: function () {\n      return gL10nData;\n    },\n    getText: function () {\n      return gTextData;\n    },\n    getLanguage: function () {\n      return gLanguage;\n    },\n    setLanguage: function (lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n    getDirection: function () {\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n    },\n    translate: translateFragment,\n    getReadyState: function () {\n      return gReadyState;\n    },\n    ready: function (callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}(window, document);\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFindController = exports.FindState = void 0;\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nvar _pdf_find_utils = __w_pdfjs_require__(11);\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nexports.FindState = FindState;\nconst FIND_TIMEOUT = 250;\nconst MATCH_SCROLL_OFFSET_TOP = -50;\nconst MATCH_SCROLL_OFFSET_LEFT = -400;\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\",\n  \"\\u2019\": \"'\",\n  \"\\u201A\": \"'\",\n  \"\\u201B\": \"'\",\n  \"\\u201C\": '\"',\n  \"\\u201D\": '\"',\n  \"\\u201E\": '\"',\n  \"\\u201F\": '\"',\n  \"\\u00BC\": \"1/4\",\n  \"\\u00BD\": \"1/2\",\n  \"\\u00BE\": \"3/4\"\n};\nlet normalizationRegex = null;\n\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\nclass PDFFindController {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    this._pdfDocument = pdfDocument;\n\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n\n    this._state = state;\n\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (cmd === \"find\") {\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n\n        this._updateAllPages();\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({\n    element = null,\n    pageIndex = -1,\n    matchIndex = -1\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n\n    this._scrollMatches = false;\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT\n    };\n    (0, _ui_utils.scrollIntoView)(element, spot, true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1\n    };\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false\n    };\n    this._extractTextPromises = [];\n    this._pageContents = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n  }\n\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    if (state.query !== this._state.query) {\n      return true;\n    }\n\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n\n        if (pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !linkService.isPageVisible(pageNumber)) {\n          return true;\n        }\n\n        return false;\n\n      case \"findhighlightallchange\":\n        return false;\n    }\n\n    return true;\n  }\n\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n\n        if (prevElem.skipped) {\n          continue;\n        }\n\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n\n        if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n    });\n\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(first) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    const endIdx = startIdx + length - 1;\n\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(last) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n    let matchIdx = -queryLen;\n\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n\n      if (matchIdx === -1) {\n        break;\n      }\n\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n\n      matches.push(matchIdx);\n    }\n\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n    const queryArray = query.match(/\\S+/g);\n\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n      let matchIdx = -subqueryLen;\n\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n\n        if (matchIdx === -1) {\n          break;\n        }\n\n        if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n          continue;\n        }\n\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false\n        });\n      }\n    }\n\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const {\n      caseSensitive,\n      entireWord,\n      phraseSearch\n    } = this._state;\n\n    if (query.length === 0) {\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n\n      this._nextPageMatch();\n    }\n\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n      promise = promise.then(() => {\n        return this._pdfDocument.getPage(i + 1).then(pdfPage => {\n          return pdfPage.getTextContent({\n            normalizeWhitespace: true\n          });\n        }).then(textContent => {\n          const textItems = textContent.items;\n          const strBuf = [];\n\n          for (let j = 0, jj = textItems.length; j < jj; j++) {\n            strBuf.push(textItems[j].str);\n          }\n\n          this._pageContents[i] = normalize(strBuf.join(\"\"));\n          extractTextCapability.resolve(i);\n        }, reason => {\n          console.error(`Unable to get text content for page ${i + 1}`, reason);\n          this._pageContents[i] = \"\";\n          extractTextCapability.resolve(i);\n        });\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages();\n\n      for (let i = 0; i < numPages; i++) {\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n\n        this._pendingFindMatches[i] = true;\n\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n\n      return;\n    }\n\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    this._pagesToSearch = numPages;\n\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n\n      if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n\n        this._updateMatch(true);\n\n        return;\n      }\n\n      this._advanceOffsetPage(previous);\n    }\n\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n\n      this._updateMatch(true);\n\n      return true;\n    }\n\n    this._advanceOffsetPage(previous);\n\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n\n      if (this._pagesToSearch < 0) {\n        this._updateMatch(false);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n\n      if (!matches) {\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n\n    if (this._selected.pageIdx !== -1) {\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n\n      this._updateAllPages();\n    });\n  }\n\n  _requestMatchesCount() {\n    const {\n      pageIdx,\n      matchIdx\n    } = this._selected;\n    let current = 0,\n        total = this._matchesCountTotal;\n\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i] && this._pageMatches[i].length || 0;\n      }\n\n      current += matchIdx + 1;\n    }\n\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n\n    return {\n      current,\n      total\n    };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount()\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount()\n    });\n  }\n\n}\n\nexports.PDFFindController = PDFFindController;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCharacterType = getCharacterType;\nexports.CharacterType = void 0;\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7\n};\nexports.CharacterType = CharacterType;\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= 0x30 && charCode <= 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n}\n\nfunction isHan(charCode) {\n  return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n        return CharacterType.ALPHA_LETTER;\n      }\n\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === 0xa0) {\n      return CharacterType.SPACE;\n    }\n\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n\n  return CharacterType.ALPHA_LETTER;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDestHashesEqual = isDestHashesEqual;\nexports.isDestArraysEqual = isDestArraysEqual;\nexports.PDFHistory = void 0;\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nconst HASH_CHANGE_TIMEOUT = 1000;\nconst POSITION_UPDATED_THRESHOLD = 50;\nconst UPDATE_VIEWAREA_TIMEOUT = 1000;\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n    });\n\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      const onPagesLoaded = evt => {\n        this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n\n        this._isPagesLoaded = !!evt.pagesCount;\n      };\n\n      this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n    });\n  }\n\n  initialize({\n    fingerprint,\n    resetHistory = false,\n    updateUrl = false\n  }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');\n      return;\n    }\n\n    if (this._initialized) {\n      this.reset();\n    }\n\n    const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n    this._initialized = true;\n\n    this._bindEvents();\n\n    const state = window.history.state;\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, true) || resetHistory) {\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash(true);\n\n      if (!hash || reInitialized || resetHistory) {\n        this._pushOrReplaceState(null, true);\n\n        return;\n      }\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  reset() {\n    if (this._initialized) {\n      this._pageHide();\n\n      this._initialized = false;\n\n      this._unbindEvents();\n    }\n\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  push({\n    namedDest = null,\n    explicitDest,\n    pageNumber\n  }) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`);\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`);\n      return;\n    } else if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n      if (pageNumber !== null || this._destination) {\n        console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n\n    if (!hash) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n      if (this._destination.page) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      dest: explicitDest,\n      hash,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    }, forceReplace);\n\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    this._tryPushCurrentPosition();\n  }\n\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  get popStateInProgress() {\n    return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination\n    };\n\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n\n    if (this._updateUrl && destination && destination.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      this._maxUid = this._uid;\n      window.history.pushState(newState, \"\", newUrl);\n    }\n  }\n\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n\n    let position = this._position;\n\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n\n      return;\n    }\n\n    if (this._destination.temporary) {\n      this._pushOrReplaceState(position, true);\n\n      return;\n    }\n\n    if (this._destination.hash === position.hash) {\n      return;\n    }\n\n    if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination.page >= position.first && this._destination.page <= position.page) {\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        if (typeof state.fingerprint !== \"string\" || state.fingerprint.length !== this._fingerprint.length) {\n          return false;\n        }\n\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n\n        if (!perfEntry || perfEntry.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    if (removeTemporary && destination && destination.temporary) {\n      delete destination.temporary;\n    }\n\n    this._destination = destination;\n    this._uid = uid;\n    this._numPositionUpdates = 0;\n  }\n\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = (0, _ui_utils.parseQueryString)(hash);\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (!(Number.isInteger(page) && page > 0 && page <= this.linkService.pagesCount) || checkNameddest && nameddest.length > 0) {\n      page = null;\n    }\n\n    return {\n      hash,\n      page,\n      rotation: this.linkService.rotation\n    };\n  }\n\n  _updateViewarea({\n    location\n  }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode ? `page=${location.pageNumber}` : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(true);\n        }\n\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  _popState({\n    state\n  }) {\n    const newHash = getCurrentHash(),\n          hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (!state) {\n      this._uid++;\n\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash();\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    if (!this._isValidState(state)) {\n      return;\n    }\n\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      this._blockHashChange++;\n      (0, _ui_utils.waitOnEventOrTimeout)({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if ((0, _ui_utils.isValidRotation)(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this.linkService.navigateTo(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      this.linkService.page = destination.page;\n    }\n\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  _pageHide() {\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  _bindEvents() {\n    if (this._boundEvents) {\n      return;\n    }\n\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this)\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return;\n    }\n\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n    this._boundEvents = null;\n  }\n\n}\n\nexports.PDFHistory = PDFHistory;\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n\n  if (destHash === pushHash) {\n    return true;\n  }\n\n  const {\n    nameddest\n  } = (0, _ui_utils.parseQueryString)(destHash);\n\n  if (nameddest === pushHash) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return first === second || Number.isNaN(first) && Number.isNaN(second);\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPageView = void 0;\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nvar _pdf_rendering_queue = __w_pdfjs_require__(14);\n\nvar _viewer_compatibility = __w_pdfjs_require__(7);\n\nconst MAX_CANVAS_PIXELS = _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\nclass PDFPageView {\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n    this.stats = pdfPage.stats;\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      this.zoomLayer.remove();\n    }\n\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n    const currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n\n      div.removeChild(node);\n    }\n\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n\n      this._resetZoomLayer();\n    }\n\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation) {\n    this.scale = scale || this.scale;\n\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now()\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n\n      if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n        this.cssTransform(this.canvas, true);\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now()\n        });\n        return;\n      }\n\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n\n    this.reset(true, true);\n  }\n\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\";\n    const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n        scaleY = 1;\n\n    if (absRotation === 90 || absRotation === 270) {\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n\n    const cssTransform = \"rotate(\" + relativeRotation + \"deg) \" + \"scale(\" + scaleX + \",\" + scaleY + \")\";\n    target.style.transform = cssTransform;\n\n    if (this.textLayer) {\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform = \"rotate(\" + textAbsRotation + \"deg) \" + \"scale(\" + scale + \", \" + scale + \") \" + \"translate(\" + transX + \", \" + transY + \")\";\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset();\n    }\n\n    const {\n      div,\n      pdfPage\n    } = this;\n\n    if (!pdfPage) {\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n\n    if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n\n      if (this.annotationLayer && this.annotationLayer.div) {\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus);\n    }\n\n    this.textLayer = textLayer;\n    let renderContinueCallback = null;\n\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n          this.resume = () => {\n            this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n            cont();\n          };\n\n          return;\n        }\n\n        cont();\n      };\n    }\n\n    const finishPaintTask = async error => {\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof _pdfjsLib.RenderingCancelledException) {\n        this.error = null;\n        return;\n      }\n\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      this._resetZoomLayer(true);\n\n      this.error = error;\n      this.stats = pdfPage.stats;\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now()\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n    const resultPromise = paintTask.promise.then(function () {\n      return finishPaintTask(null).then(function () {\n        if (textLayer) {\n          const readableStream = pdfPage.streamTextContent({\n            normalizeWhitespace: true\n          });\n          textLayer.setTextContentStream(readableStream);\n          textLayer.render();\n        }\n      });\n    }, function (reason) {\n      return finishPaintTask(reason);\n    });\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, this.imageResourcesPath, this.renderInteractiveForms, this.l10n);\n      }\n\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n\n    div.setAttribute(\"data-loaded\", true);\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n    const result = {\n      promise: renderCapability.promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        renderTask.cancel();\n      }\n\n    };\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n.get(\"page_canvas\", {\n      page: this.id\n    }, \"Page {{page}}\").then(msg => {\n      canvas.setAttribute(\"aria-label\", msg);\n    });\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n    canvas.mozOpaque = true;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({\n        scale: _ui_utils.CSS_UNITS\n      });\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n    const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n    canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\";\n    this.paintedViewportMap.set(canvas, viewport);\n    const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(function () {\n      showCanvas();\n      renderCapability.resolve(undefined);\n    }, function (error) {\n      showCanvas();\n      renderCapability.reject(error);\n    });\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    let cancelled = false;\n\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({\n      scale: _ui_utils.CSS_UNITS\n    });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n    return {\n      promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        cancelled = true;\n      }\n\n    };\n  }\n\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n\n}\n\nexports.PDFPageView = PDFPageView;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFRenderingQueue = exports.RenderingStates = void 0;\nconst CLEANUP_TIMEOUT = 30000;\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\nexports.RenderingStates = RenderingStates;\n\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  getHighestPriority(visible, views, scrolledDown) {\n    const visibleViews = visible.views;\n    const numVisible = visibleViews.length;\n\n    if (numVisible === 0) {\n      return null;\n    }\n\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n\n      if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n        return views[previousPageIndex];\n      }\n    }\n\n    return null;\n  }\n\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view.draw().finally(() => {\n          this.renderHighestPriority();\n        }).catch(reason => {\n          console.error(`renderView: \"${reason}\"`);\n        });\n        break;\n    }\n\n    return true;\n  }\n\n}\n\nexports.PDFRenderingQueue = PDFRenderingQueue;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFSinglePageViewer = void 0;\n\nvar _base_viewer = __w_pdfjs_require__(16);\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nclass PDFSinglePageViewer extends _base_viewer.BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  _resetView() {\n    super._resetView();\n\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n    const viewerNodes = this.viewer.childNodes;\n\n    switch (viewerNodes.length) {\n      case 0:\n        this.viewer.appendChild(pageView.div);\n        break;\n\n      case 1:\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\"_ensurePageViewVisible: Unexpected previously visible page.\");\n        }\n\n        if (pageView === previousPageView) {\n          break;\n        }\n\n        this._shadowViewer.appendChild(previousPageView.div);\n\n        this.viewer.appendChild(pageView.div);\n        this.container.scrollTop = 0;\n        break;\n\n      default:\n        throw new Error(\"_ensurePageViewVisible: Only one page should be visible at a time.\");\n    }\n\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (pageNumber) {\n      this._setCurrentPageNumber(pageNumber);\n    }\n\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n\n    this.update();\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    return (0, _pdfjsLib.shadow)(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n\n}\n\nexports.PDFSinglePageViewer = PDFSinglePageViewer;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseViewer = void 0;\n\nvar _ui_utils = __w_pdfjs_require__(3);\n\nvar _pdf_rendering_queue = __w_pdfjs_require__(14);\n\nvar _annotation_layer_builder = __w_pdfjs_require__(1);\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nvar _pdf_page_view = __w_pdfjs_require__(13);\n\nvar _pdf_link_service = __w_pdfjs_require__(4);\n\nvar _text_layer_builder = __w_pdfjs_require__(5);\n\nconst DEFAULT_CACHE_SIZE = 10;\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n\n  this.push = function (view) {\n    const i = data.indexOf(view);\n\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n\n    data.push(view);\n\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n\n      (0, _ui_utils.moveToEndOfArray)(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    return true;\n  }\n\n  return false;\n}\n\nclass BaseViewer {\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n\n    this._name = this.constructor.name;\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.defaultRenderingQueue = !options.renderingQueue;\n\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", {\n        source: this\n      });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!this._setCurrentPageNumber(val, true)) {\n      console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n\n    this._currentPageNumber = val;\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1]\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n\n    return true;\n  }\n\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let page = val | 0;\n\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n\n    if (!this._setCurrentPageNumber(page, true)) {\n      console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  get currentScale() {\n    return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n  }\n\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!(0, _ui_utils.isValidRotation)(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n\n    this._pagesRotation = rotation;\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  get _viewerElement() {\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  _onePageRenderedOrForceFetch() {\n    if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n      return Promise.resolve();\n    }\n\n    return this._onePageRenderedCapability.promise;\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n\n      if (!pageView) {\n        return;\n      }\n\n      this._buffer.push(pageView);\n    };\n\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    };\n\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    firstPagePromise.then(firstPdfPage => {\n      this._firstPageCapability.resolve(firstPdfPage);\n\n      const scale = this.currentScale;\n      const viewport = firstPdfPage.getViewport({\n        scale: scale * _ui_utils.CSS_UNITS\n      });\n      const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE ? this : null;\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const pageView = new _pdf_page_view.PDFPageView({\n          container: this._viewerElement,\n          eventBus: this.eventBus,\n          id: pageNum,\n          scale,\n          defaultViewport: viewport.clone(),\n          renderingQueue: this.renderingQueue,\n          textLayerFactory,\n          textLayerMode: this.textLayerMode,\n          annotationLayerFactory: this,\n          imageResourcesPath: this.imageResourcesPath,\n          renderInteractiveForms: this.renderInteractiveForms,\n          renderer: this.renderer,\n          enableWebGL: this.enableWebGL,\n          useOnlyCssZoom: this.useOnlyCssZoom,\n          maxCanvasPixels: this.maxCanvasPixels,\n          l10n: this.l10n\n        });\n\n        this._pages.push(pageView);\n      }\n\n      const firstPageView = this._pages[0];\n\n      if (firstPageView) {\n        firstPageView.setPdfPage(firstPdfPage);\n        this.linkService.cachePageRef(1, firstPdfPage.ref);\n      }\n\n      if (this._spreadMode !== _ui_utils.SpreadMode.NONE) {\n        this._updateSpreadMode();\n      }\n\n      this._onePageRenderedOrForceFetch().then(() => {\n        if (this.findController) {\n          this.findController.setDocument(pdfDocument);\n        }\n\n        if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        let getPagesLeft = pagesCount - 1;\n\n        if (getPagesLeft <= 0) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n          pdfDocument.getPage(pageNum).then(pdfPage => {\n            const pageView = this._pages[pageNum - 1];\n\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n\n            this.linkService.cachePageRef(pageNum, pdfPage.ref);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          }, reason => {\n            console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          });\n        }\n      });\n\n      this.eventBus.dispatch(\"pagesinit\", {\n        source: this\n      });\n\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }).catch(reason => {\n      console.error(\"Unable to initialize viewer\", reason);\n    });\n  }\n\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = _ui_utils.UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._scrollMode = _ui_utils.ScrollMode.VERTICAL;\n    this._spreadMode = _ui_utils.SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n\n      this._onBeforeDraw = null;\n    }\n\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    }\n\n    this.viewer.textContent = \"\";\n\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n\n    this.update();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue\n        });\n      }\n\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n          dest;\n\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n        page = this._location.pageNumber;\n        dest = [null, {\n          name: \"XYZ\"\n        }, this._location.left, this._location.top, null];\n      }\n\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n\n      if (!currentPage) {\n        return;\n      }\n\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : _ui_utils.SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : _ui_utils.VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding];\n      }\n\n      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale;\n      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n\n        case \"auto\":\n          const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n          break;\n\n        default:\n          console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n\n      this._setScaleUpdatePages(scale, value, noScroll, true);\n    }\n  }\n\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n\n    this._scrollIntoView({\n      pageDiv: pageView.div\n    });\n  }\n\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n\n    if (!pageView) {\n      console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, true);\n\n      return;\n    }\n\n    let x = 0,\n        y = 0;\n    let width = 0,\n        height = 0,\n        widthScale,\n        heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n    let scale = 0;\n\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        }\n\n        break;\n\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n        widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n        heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n\n      default:\n        console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n        this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber\n      });\n\n      return;\n    }\n\n    const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: {\n        left,\n        top\n      },\n      pageNumber\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n\n    const visiblePages = visible.views,\n          numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages);\n\n    this._updateLocation(visible.first);\n\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    return this.isInPresentationMode ? false : this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL;\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return {\n        views: []\n      };\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const element = pageView.div;\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView\n    };\n    return {\n      first: view,\n      last: view,\n      views: [view]\n    };\n  }\n\n  _getVisiblePages() {\n    return (0, _ui_utils.getVisibleElements)(this.container, this._pages, true, this._isScrollModeHorizontal);\n  }\n\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n\n    if (pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`);\n      return false;\n    }\n\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n\n    const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\n      if (!pageView.pdfPage) {\n        pageView.setPdfPage(pdfPage);\n      }\n\n      this._pagesRequests.delete(pageView);\n\n      return pdfPage;\n    }).catch(reason => {\n      console.error(\"Unable to get page for page view\", reason);\n\n      this._pagesRequests.delete(pageView);\n    });\n\n    this._pagesRequests.set(pageView, promise);\n\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n\n    const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\n\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new _text_layer_builder.TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n    });\n  }\n\n  createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n    return new _annotation_layer_builder.AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n\n    });\n  }\n\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n\n      if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({\n        scale: 1\n      });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation\n      };\n    });\n\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n\n    const isFirstPagePortrait = (0, _ui_utils.isPortraitOrientation)(pagesOverview[0]);\n    return pagesOverview.map(function (size) {\n      if (isFirstPagePortrait === (0, _ui_utils.isPortraitOrientation)(size)) {\n        return size;\n      }\n\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360\n      };\n    });\n  }\n\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidScrollMode)(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateScrollMode(this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n          viewer = this.viewer;\n    viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL);\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidSpreadMode)(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateSpreadMode(this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const viewer = this.viewer,\n          pages = this._pages;\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n}\n\nexports.BaseViewer = BaseViewer;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFViewer = void 0;\n\nvar _base_viewer = __w_pdfjs_require__(16);\n\nvar _pdfjsLib = __w_pdfjs_require__(2);\n\nclass PDFViewer extends _base_viewer.BaseViewer {\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const {\n        scrollLeft,\n        clientWidth\n      } = this.container;\n\n      if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n        pageSpot = {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      return this._getCurrentVisiblePage();\n    }\n\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n\n    this._setCurrentPageNumber(currentId);\n  }\n\n}\n\nexports.PDFViewer = PDFViewer;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf_viewer.js.map"],"sourceRoot":""}